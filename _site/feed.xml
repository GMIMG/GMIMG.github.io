<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-10-14T04:23:42+09:00</updated><id>http://localhost:4000/</id><title type="html">GMIMG</title><subtitle>Mechagrammer</subtitle><author><name>Jimin Hwang</name></author><entry><title type="html">Sass</title><link href="http://localhost:4000/posts/gmimg" rel="alternate" type="text/html" title="Sass" /><published>2018-10-04T00:00:00+09:00</published><updated>2018-10-04T00:00:00+09:00</updated><id>http://localhost:4000/posts/gmimg</id><content type="html" xml:base="http://localhost:4000/posts/gmimg">&lt;h1 id=&quot;123&quot;&gt;123&lt;/h1&gt;</content><author><name>Gmimg</name></author><category term="None" /><category term="Argorism" /><category term="Bat" /><category term="Blogging" /><category term="Programming" /><category term="Sass" /><category term="scss" /><category term="css" /><category term="Web" /><category term="Python" /><summary type="html">123</summary></entry><entry><title type="html">데이터베이스 조작</title><link href="http://localhost:4000/posts/control_database" rel="alternate" type="text/html" title="데이터베이스 조작" /><published>2018-10-03T00:00:00+09:00</published><updated>2018-10-03T00:00:00+09:00</updated><id>http://localhost:4000/posts/control_database</id><content type="html" xml:base="http://localhost:4000/posts/control_database">&lt;h1 id=&quot;데이터베이스-조작&quot;&gt;데이터베이스 조작&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;SQL DML&lt;/li&gt;
  &lt;li&gt;SQL 질의어&lt;/li&gt;
  &lt;li&gt;뷰&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;dmldata-manipulation-language&quot;&gt;DML(Data Manipulation Language)&lt;/h2&gt;

&lt;p&gt;SQL의 데이터 조작어&lt;/p&gt;

&lt;p&gt;INSERT INTO 테이블 [(column [, column…])] VALUES  (값 [,값]) ;&lt;/p&gt;

&lt;p&gt;NULL값은 &lt;code class=&quot;highlighter-rouge&quot;&gt;[빈칸]&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;''&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;null&lt;/code&gt;로&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;distinct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;column&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;alias&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]...&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블명&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Query&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;조건&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;들&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;표현식}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ASC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Gmimg</name></author><category term="Database" /><category term="Database" /><category term="SQL" /><category term="DML" /><category term="뷰" /><summary type="html">데이터베이스 조작</summary></entry><entry><title type="html">Rd</title><link href="http://localhost:4000/posts/rd" rel="alternate" type="text/html" title="Rd" /><published>2018-10-02T00:00:00+09:00</published><updated>2018-10-02T00:00:00+09:00</updated><id>http://localhost:4000/posts/rd</id><content type="html" xml:base="http://localhost:4000/posts/rd"></content><author><name>Gmimg</name></author><category term="Applied_Robot_Design" /><category term="Applied_Robot_Design" /><summary type="html"></summary></entry><entry><title type="html">C++ Parameter and overloading</title><link href="http://localhost:4000/posts/c+" rel="alternate" type="text/html" title="C++ Parameter and overloading" /><published>2018-10-02T00:00:00+09:00</published><updated>2018-10-02T00:00:00+09:00</updated><id>http://localhost:4000/posts/c+</id><content type="html" xml:base="http://localhost:4000/posts/c+">&lt;h1 id=&quot;call-by-value--call-by-reference&quot;&gt;Call-by-value &amp;amp; Call-by reference&lt;/h1&gt;

&lt;p&gt;-&amp;gt; Mechanism&lt;/p&gt;

&lt;p&gt;인수(Argument)(매개변수)(Parameter) : 함수에게 특정 항목의 위치를 식별하는데 필요한 변수나 상수를 제공한다. 이를 전체적인 틀인 함수가 정보를 토대로 함수를 실행시키고 산출합니다.&lt;/p&gt;

&lt;p&gt;Formal parameter(가인수) -&amp;gt; 함수 선언(declaration)나 정의(definition)에 쓰임&lt;br /&gt;
Arguments(실인수) -&amp;gt; 함수를 호출(call)할때, formal parameter를 fill-in할 때&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;가인수(Formal parameter) : 함수에 정의되어진 인수&lt;/li&gt;
  &lt;li&gt;실인수(Actual parameter) : 함수를 호출할 때 전달되는 데이터 값 또는 인수 값&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-C++&quot;&gt;double foo(int bar);
//에서 (int bar)라는 이름 자체는 가인수이고 
//bar이라는 인수가 가르키는 값(포인터)이 실인수 이다.
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;call-by-value-parameter&quot;&gt;call-by-value parameter&lt;/h2&gt;

&lt;p&gt;call-by-value parameter는 함수안에서 선언(declaration)되는 지역 변수이다.
함수는 실인수에 접근할 수 없다.&lt;/p&gt;

&lt;h2 id=&quot;call-by-reference-parameter&quot;&gt;call-by-reference parameter&lt;/h2&gt;

&lt;p&gt;caller의 실인수에 접근을 제공한다. 즉 서브루틴에서 밖의 인수값을 바꾼다.
C++ 에선 가인수의 type 다음에 &amp;amp;을 붙여서 사용한다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-C++&quot;&gt;ex) int foo(int&amp;amp; bar);
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getNumbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//Reads two integers from the keyboard.
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;swapValues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;variable1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;variable2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//Interchanges the values of variable1 and variable2.
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;showResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//Shows the values of variable1 and variable2, in that order.
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;intmain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secondNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;getNumbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;firstNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secondNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;swapValues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;firstNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secondNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;showResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;firstNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secondNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getNumbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Enter two integers: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input1&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;swapValues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;variable1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;variable2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;variable1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;variable1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;variable2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;variable2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;showResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;In reverse order the numbers are: &quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Sample Dialogue
Enter two integers: 5 6
In reverse order the numbers are: 6 5&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;reference는 실인수의 memory의 위치(주소)를 언급한다.
Reference arguments는 좋을 때도 있지만 데이터보호측면에서 위험하다.
데이터를 보호하기위해 const를 이용한다.&lt;/p&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;par1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;overloading&quot;&gt;Overloading&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Same function name Different parameter lists&lt;/li&gt;
  &lt;li&gt;Two separate function definitions&lt;/li&gt;
  &lt;li&gt;…&lt;/li&gt;
  &lt;li&gt;반환형식으로 구분된 함수는 오버로드 되지않음.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;resolving-overloading&quot;&gt;Resolving Overloading&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Exact match
  실인수의 갯수와 type이 정의와 정확하게 match하는지 판단하고&lt;/li&gt;
  &lt;li&gt;맞지 않으면 type conversion을 통해 맞춘다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;debugging&quot;&gt;Debugging&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Lots of cout&lt;/li&gt;
  &lt;li&gt;Compiler Debugger&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/Assert.h&quot;&gt;assert Macro&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;-&amp;gt; Assertion is a statement that is either ture or false.
프로그램이 실행될 때 assert() 는 조건에 오류가 있을 경우 표준오류(stderr)를 통해 실패한 호출의 정보를 출력하고, abort()를 호출한다.
쉽게말해 추정에러내용과 함께 프로그램을 정지시킴.&lt;/p&gt;

&lt;p&gt;stderr - 소스파일명: 소스라인넘버: 소스함수: false로 추정된 텍스트&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;assert.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_assert&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;test_assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;i = %d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Stubs : 프로그램이 완성되지 않았을 때 임시로 돌아가게 만들어 놓은 상태
Drivers : 어떤 모듈을 테스트하기 위한 메인함수 형태&lt;/p&gt;

&lt;p&gt;invoke : 호출하다.
선언(declare)
정의(definition)&lt;/p&gt;</content><author><name>Gmimg</name></author><category term="C++" /><category term="C++" /><category term="Call-by-value" /><category term="Call-by reference" /><category term="Overloading" /><summary type="html">Call-by-value &amp;amp; Call-by reference</summary></entry><entry><title type="html">Da</title><link href="http://localhost:4000/posts/da" rel="alternate" type="text/html" title="Da" /><published>2018-10-02T00:00:00+09:00</published><updated>2018-10-02T00:00:00+09:00</updated><id>http://localhost:4000/posts/da</id><content type="html" xml:base="http://localhost:4000/posts/da"></content><author><name>Gmimg</name></author><category term="Data_communications" /><category term="Data_communications" /><summary type="html"></summary></entry><entry><title type="html">Digital Transmission</title><link href="http://localhost:4000/posts/da" rel="alternate" type="text/html" title="Digital Transmission" /><published>2018-10-01T00:00:00+09:00</published><updated>2018-10-01T00:00:00+09:00</updated><id>http://localhost:4000/posts/da</id><content type="html" xml:base="http://localhost:4000/posts/da">&lt;h1 id=&quot;digital-transmission&quot;&gt;Digital Transmission&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;Digital-to-digital&lt;/li&gt;
  &lt;li&gt;Analog-to-digital&lt;/li&gt;
  &lt;li&gt;transmission modes&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;digital-to-digital&quot;&gt;Digital-to-digital&lt;/h2&gt;

&lt;p&gt;Digital signal -&amp;gt; Digital data&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;line coding&lt;/li&gt;
  &lt;li&gt;block coding&lt;/li&gt;
  &lt;li&gt;scrambling&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;line-coding&quot;&gt;Line coding&lt;/h3&gt;

&lt;p&gt;converts a sequence of bits to a digital signal&lt;/p&gt;

&lt;p&gt;Data =&amp;gt; ‘incoding’ =&amp;gt; Line coding =&amp;gt; ‘decoding’ =&amp;gt; Data&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Data element: the smallest entity that can represent a piece of information; this is the bit; Data rate (bps) -&amp;gt; 0과 1의 갯수&lt;/li&gt;
  &lt;li&gt;Signal element: the shortest unit (timewise) of a digital signal; signal rate (baud rate) -&amp;gt; 전압의 높낮이 갯수&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;*구분할줄 알아야함&lt;/p&gt;

&lt;p&gt;Define a ratio &lt;code class=&quot;highlighter-rouge&quot;&gt;r&lt;/code&gt; which is the &lt;code class=&quot;highlighter-rouge&quot;&gt;number of data elements carried by each signal element&lt;/code&gt; (1개의 signal element로 몇개의 bit를 표현할 수 있는지)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/line_coding1.jpg&quot; alt=&quot;Alt text&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Relationship between data rate (N) and signal rate (S)&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;S = N/r&lt;/code&gt;&lt;br /&gt;
S_ave = c x N x (1/r) baud&lt;br /&gt;
c: case factor (0 &amp;lt;= c &amp;lt;= 1)&lt;/p&gt;

&lt;p&gt;Baud rate와 Band width는 비례한다&lt;/p&gt;

&lt;p&gt;B_min= c x N x (1/r)&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;문제점&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Baseline Wandering
0이 연속으로 나올때 구분&lt;br /&gt;
drift in the baseline&lt;br /&gt;
difficult for the receiver to decode correctly.&lt;/li&gt;
  &lt;li&gt;DC Components
Frequencies around zero&lt;br /&gt;
주파수가 0에 가까워지면(연속적인 신호) DC가 되어 구리선으로 보내기 힘들어진다.&lt;/li&gt;
  &lt;li&gt;Self-synchronization
receiver’s bit intervals must correspond exactly to the sender’s bit intervals&lt;br /&gt;
송신자와 수진자의 비트간격이 정확하게 일치해야한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;lack of synchronization&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;example)&lt;br /&gt;
Receiver clock is 0.1 percent faster.
How many extra bits per second does the receiver receive if the data rate is 1 kbps?&lt;br /&gt;
1000 bits sent -&amp;gt; 1001 bits receive&lt;br /&gt;
1000000 bits sent -&amp;gt; 1001000 bits receive&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Line coding scheme&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Unipolar(단극)&lt;/p&gt;

    &lt;p&gt;All the signal levels are on one side of the time axis, either above or below&lt;/p&gt;

    &lt;p&gt;NRZ(Non-Return-to-Zero) : Signal does not return to zero at the middle of the bit.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/unipolar.jpg&quot; alt=&quot;Alt text&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Polar&lt;/p&gt;

    &lt;p&gt;Voltages are on both sides of the time axis.&lt;/p&gt;

    &lt;p&gt;Unipolar보다 에너지 효율이 좋음.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/polar.jpg&quot; alt=&quot;Alt text&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;NRZ-L : 0과 1이 반대의 level을가짐.&lt;/p&gt;

    &lt;p&gt;NRZ-I : 0이면 그대로 1이면 신호를 역전시킴&lt;/p&gt;

    &lt;p&gt;The main problem with NRZ encoding occurs when the sender and receiver clocks are not synchronized. The receiver does not know when one bit has ended and the next bit is starting. -&amp;gt;&lt;/p&gt;

    &lt;p&gt;RZ(Return-to-Zero) : 무조건 중간에 0으로 돌아감. 수신기가 송신기의 bit시작 타이밍을 알수있다.(동기화)&lt;br /&gt;
uses three values: positive, negative, and zero.&lt;br /&gt;
1의 데이터를 2의 signal로 보내기 때문에 NRZ 보다 더 고주파 성분이 필요하다.&lt;br /&gt;
No DC component problem.&lt;br /&gt;
요즘 사용하진 않음&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/RZ.jpg&quot; alt=&quot;Alt text&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;biphase : RZ + NRZ-L&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;Manchester : 전압이 상반기동안은 일정하고 하반기에 다른레벨로 이동한다. 중간의 비트전환이 동기화를 제공.&lt;/li&gt;
      &lt;li&gt;Differential Manchester
중간에 비트전환을 해주고, 다음비트가 0이면 비트시작을 반전하고 1이면 그대로간다.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/biphase.jpg&quot; alt=&quot;Alt text&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Bipolar(양극)
DC component는 없으나 동기화문제가 있음.
    &lt;ul&gt;
      &lt;li&gt;AMI(Alternate mark invesion)
0은 volage 0, 1은 번갈아서 1역전&lt;/li&gt;
      &lt;li&gt;Pseudoternary
AMI의 반대&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/bipolar.jpg&quot; alt=&quot;Alt text&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Multilevel
전압의 level을 나눠 date를 보내줌.&lt;br /&gt;
1 baud당 보내는 bit의 수를 증가시킴.&lt;br /&gt;
mBnL : m data elements, n signal elements &lt;code class=&quot;highlighter-rouge&quot;&gt;2^m &amp;lt;= L^n&lt;/code&gt;
2B1Q =&amp;gt; 2^2 bits, 4^1 signal&lt;br /&gt;
8B6T =&amp;gt; 2^8 bits, 3^6 signal -&amp;gt; 남은 signal은 synchronization, error detection, and DC balance&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/2B1Q.jpg&quot; alt=&quot;Alt text&quot; /&gt;
&lt;img src=&quot;/assets/img/8B6T.jpg&quot; alt=&quot;Alt text&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Multitransition&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;line coding summary
&lt;img src=&quot;/assets/img/line_coding2.jpg&quot; alt=&quot;Alt text&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;block-coding&quot;&gt;block coding&lt;/h3&gt;

&lt;h3 id=&quot;scrambling&quot;&gt;Scrambling&lt;/h3&gt;

&lt;p&gt;규칙을 만들어서 기존 error를(baseline같은) 잡아줌&lt;/p&gt;

&lt;h2 id=&quot;analog-to-digital&quot;&gt;Analog-to-digital&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Pulse code modulation(PCM)
    &lt;ul&gt;
      &lt;li&gt;sampling
sine파는 2개의 sampling으로 복원가능&lt;br /&gt;
이상적으로 최대 주파수의 2배를 sampling&lt;/li&gt;
      &lt;li&gt;quantizing
실수를 잘라줌&lt;/li&gt;
      &lt;li&gt;encoding
디지털화해줌&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Delta modulation&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;transmission-modes&quot;&gt;transmission modes&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;parallel
속도가 빠름&lt;/li&gt;
  &lt;li&gt;serial transmission
    &lt;ul&gt;
      &lt;li&gt;Asynchronous
키보드처럼 시작-끝 반복, 데이터 단위가 작음.&lt;/li&gt;
      &lt;li&gt;Synchronous
연속적인 Data&lt;/li&gt;
      &lt;li&gt;Isochronous&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Gmimg</name></author><category term="Data_communications" /><category term="Data_communications" /><summary type="html">Digital Transmission</summary></entry><entry><title type="html">Sass</title><link href="http://localhost:4000/posts/Sass" rel="alternate" type="text/html" title="Sass" /><published>2018-09-29T00:00:00+09:00</published><updated>2018-09-29T00:00:00+09:00</updated><id>http://localhost:4000/posts/Sass</id><content type="html" xml:base="http://localhost:4000/posts/Sass">&lt;h1 id=&quot;sass&quot;&gt;Sass&lt;/h1&gt;

&lt;h2 id=&quot;css&quot;&gt;css&lt;/h2&gt;

&lt;p&gt;왼쪽, 오른쪽 정렬은 float속성&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;중앙 정렬은 margin auto 이용&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;margin-left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;margin-right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;포장용 객체는 자기가 품고 있는 객체들이 모두 float 속성을 가지고 있게되면, 정상적인 높이 값을 갖지 못하는 현상이 있습니다.
즉 포장용 객체에 overflow: hidden 속성을 선언&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.beautifulcss.com/archives/787&quot;&gt;참고사이트&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;position
float&lt;/p&gt;

&lt;p&gt;margin
padding&lt;/p&gt;

&lt;p&gt;table&lt;/p&gt;

&lt;p&gt;@media
@mixin
hober&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//z-index: 1; /* Stay on top */
      //white-space: nowrap
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Gmimg</name></author><category term="Programming" /><category term="Programming" /><category term="Sass" /><category term="scss" /><category term="css" /><category term="Web" /><summary type="html">Sass</summary></entry><entry><title type="html">공부할 것</title><link href="http://localhost:4000/posts/study" rel="alternate" type="text/html" title="공부할 것" /><published>2018-09-29T00:00:00+09:00</published><updated>2018-09-29T00:00:00+09:00</updated><id>http://localhost:4000/posts/study</id><content type="html" xml:base="http://localhost:4000/posts/study">&lt;p&gt;~~~foundation knowledge quiz(nexon)
recursion, index, sort, binary, serch
stack / heap
process / thread
call by value / call by reference / call by object reference(python)
native code
MVC Architecture / django(MTV)
Write simple text-based games
~~~&lt;/p&gt;

&lt;h1 id=&quot;compiler&quot;&gt;compiler&lt;/h1&gt;

&lt;h2 id=&quot;compiler-vs-interpreter&quot;&gt;compiler vs Interpreter&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;compiler time이 있으면 compiler 언어&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;symboltable&quot;&gt;symboltable&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;변수와 함수를 모아 놓아서 기술한 테이블&lt;/p&gt;

    &lt;p&gt;global
  ‘func’&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;내pc 우클릭 - 속성 -고급 시스템 설정 -  환경 변수 - 계정 환경변수 - PYTHONPATH = “경로”&lt;/p&gt;

&lt;p&gt;IS-A 와 HAS-A 둘 중 헷갈리면 보통은 HAS-A&lt;/p&gt;

&lt;p&gt;function
call by&lt;/p&gt;

&lt;p&gt;문자
인코딩
유니코드
utf&lt;/p&gt;

&lt;p&gt;OOP
캡슐화
정보은닉
상속-&amp;gt; 다형성
IS-A
HAS-A
추상화&lt;/p&gt;

&lt;p&gt;CPU
레지스터
general 
캐쉬히트 캐쉬미스
지역성&lt;/p&gt;

&lt;p&gt;메모리
코드
데이터
스택
힙&lt;/p&gt;

&lt;p&gt;OS
프로세스
프로세스 스케줄링
우선순위
라운드로빈
컨텍스트 스위칭(교체)&lt;/p&gt;

&lt;p&gt;-멀티쓰레드
뮤츄얼~&lt;/p&gt;

&lt;p&gt;-가상주소
페이지폴트&lt;/p&gt;

&lt;p&gt;자료구조
링크드리스트
BST**
버블소트
퀵소트**&lt;/p&gt;

&lt;p&gt;더 공부할 것 (자료구조)
트리 BST-&amp;gt; O(n)
self-balanced tree (AVL&lt;em&gt;, red-black&lt;/em&gt;, 2-3) (자가균형트리)&lt;/p&gt;

&lt;p&gt;테이블(map,dictionary) -&amp;gt; hash&lt;strong&gt;(blockchain이 예시임)
open addressing기법&lt;/strong&gt;
closed addressing- chaing&lt;/p&gt;

&lt;p&gt;그래프
BFS 너비우선탐색
DFS
MST (minimum spanning tree)&lt;/p&gt;

&lt;p&gt;greedy알고리즘 (최소신장트리)
다이스트라(sikjstra) - 한점기준
크루스칼
프림&lt;/p&gt;</content><author><name>Gmimg</name></author><category term="Computer_science" /><category term="Study" /><summary type="html">~~~foundation knowledge quiz(nexon) recursion, index, sort, binary, serch stack / heap process / thread call by value / call by reference / call by object reference(python) native code MVC Architecture / django(MTV) Write simple text-based games ~~~</summary></entry><entry><title type="html">데이터베이스 정의</title><link href="http://localhost:4000/posts/define_database" rel="alternate" type="text/html" title="데이터베이스 정의" /><published>2018-09-19T00:00:00+09:00</published><updated>2018-09-19T00:00:00+09:00</updated><id>http://localhost:4000/posts/define_database</id><content type="html" xml:base="http://localhost:4000/posts/define_database">&lt;h1 id=&quot;데이터베이스-정의&quot;&gt;데이터베이스 정의&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;테이블스페이스&lt;/li&gt;
  &lt;li&gt;사용자 계정&lt;/li&gt;
  &lt;li&gt;권한과 역할&lt;/li&gt;
  &lt;li&gt;테이블 정의&lt;/li&gt;
  &lt;li&gt;데이터 사전&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database_set.jpg&quot; alt=&quot;Alt text&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;테이블-스페이스-정의&quot;&gt;테이블 스페이스 정의&lt;/h2&gt;

&lt;p&gt;create tablespace firstbank datafile ‘c:\app\sksuk\oradata\orcl\first01.dbf’ size 10M;&lt;/p&gt;

&lt;h2 id=&quot;사용자-계정&quot;&gt;사용자 계정&lt;/h2&gt;

&lt;p&gt;CREATE USER user IDENTIFIED&lt;br /&gt;
[BY password | EXTERNALLY]&lt;br /&gt;
[DEFAULT TABLESPACE tablespace]&lt;br /&gt;
[TEMPORARY TABLESPACE tablespace]&lt;br /&gt;
[QUOTA [integer [K | M] | UNLIMITED] ON tablespace]&lt;br /&gt;
[PROFILE profile]&lt;/p&gt;

&lt;h2 id=&quot;권한&quot;&gt;권한&lt;/h2&gt;

&lt;p&gt;GRANT [시스템 권한] TO [User] WITH ADMIN OPTION;&lt;/p&gt;

&lt;p&gt;REVOKE [시스템 권한] FROM [User];&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;GRANT [객체권한] (컬럼 1, 컬럼 2…) ON [객체명&lt;/td&gt;
      &lt;td&gt;ALL] TO [사용자명&lt;/td&gt;
      &lt;td&gt;PUBLIC] WITH GRANT OPTION;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;REVOKE [객체권한] ON [객체명] FROM [사용자명&lt;/td&gt;
      &lt;td&gt;PUBLIC] CASCADE CONSTRAINTS;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;역할&quot;&gt;역할&lt;/h2&gt;

&lt;p&gt;CREATE ROLE 역할명 [NOT IDENTIFIED | IDENTIFIED BY [암호명]];&lt;br /&gt;
ALTER ROLE 역할이름  [NOT IDENTIFIED | IDENTIFIED BY [암호]];&lt;br /&gt;
GRANT 역할(ROLE) TO 사용자;&lt;br /&gt;
REVOKE 역할(ROLE) FROM 사용자;&lt;/p&gt;

&lt;p&gt;종류&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;CONNECT : create session, create table, create index 등 8가지의 권한으로 생성&lt;/li&gt;
  &lt;li&gt;RESOURCE : create table 등 약 20여 가지 권한으로 생성&lt;/li&gt;
  &lt;li&gt;DBA : 데이터베이스의 모든 권한을 가짐&lt;/li&gt;
  &lt;li&gt;SYSOPER : SYSDBA 권한과 데이터베이스를 생성할 수 있는 역할&lt;/li&gt;
  &lt;li&gt;SYSDBA : 데이터베이스 시작과 종료 및 관리를 하기 위해 필요한 역할&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;테이블-정의&quot;&gt;테이블 정의&lt;/h2&gt;

&lt;p&gt;DDL : CREATE, ALTER, DROP, RENAME, TRUNCATE&lt;/p&gt;

&lt;p&gt;데이터베이스의 구조를 생성, 갱신, 삭제하는 데에 사용되는 SQL 명령의 부분 집합
즉각적으로 데이터베이스에 영향을 미치며, 데이터 사전(data dictionary)에 정보를 기록&lt;/p&gt;

&lt;p&gt;테이블생성&lt;/p&gt;

&lt;p&gt;CREATE TABLE [schema].table_name&lt;br /&gt;
  (column_name Datatype [DEFAULT 식] [column 제약 조건] ,&lt;br /&gt;
  …&lt;br /&gt;
  [table 제약 조건]);&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SQL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;customer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c_no&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VARCHAR2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c_name&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VARCHAR2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c_addr&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VARCHAR2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c_phone&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;        &lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARCHAR2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c_dist&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CONSTRAINT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cu_no_pk&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c_no&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;desc table로 테이블 속성 확인&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/constraint.jpg&quot; alt=&quot;Alt text&quot; /&gt;&lt;/p&gt;</content><author><name>Gmimg</name></author><category term="Database" /><category term="Database" /><category term="Table_space" /><category term="DDL" /><summary type="html">데이터베이스 정의</summary></entry><entry><title type="html">Rd</title><link href="http://localhost:4000/posts/rd" rel="alternate" type="text/html" title="Rd" /><published>2018-09-18T00:00:00+09:00</published><updated>2018-09-18T00:00:00+09:00</updated><id>http://localhost:4000/posts/rd</id><content type="html" xml:base="http://localhost:4000/posts/rd"></content><author><name>Gmimg</name></author><category term="Applied_Robot_Design" /><category term="Applied_Robot_Design" /><summary type="html"></summary></entry></feed>