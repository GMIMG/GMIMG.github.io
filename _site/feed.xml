<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="ko"><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="ko" /><updated>2019-08-03T22:53:06+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">GMIMG</title><subtitle>Mechagrammer</subtitle><author><name>Jimin Hwang</name></author><entry><title type="html">School</title><link href="http://localhost:4000/posts/school" rel="alternate" type="text/html" title="School" /><published>2019-08-01T00:00:00+09:00</published><updated>2019-08-01T00:00:00+09:00</updated><id>http://localhost:4000/posts/school</id><content type="html" xml:base="http://localhost:4000/posts/school">&lt;ul&gt;
  &lt;li&gt;190722&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;운영체제 공부&lt;/p&gt;

&lt;p&gt;https://covenant.tistory.com/100?category=773722&lt;/p&gt;

&lt;p&gt;http://www.kocw.net/home/search/kemView.do?kemId=978503&lt;/p&gt;

&lt;p&gt;http://www.kocw.net/home/m/search/kemView.do?kemId=998138&lt;/p&gt;

&lt;p&gt;http://blog.naver.com/PostList.nhn?blogId=hjyang0&amp;amp;parentCategoryNo=6&lt;/p&gt;

&lt;p&gt;http://snui.snu.ac.kr/ocw/index.php?mode=view&amp;amp;id=623#class_room-tab&lt;/p&gt;</content><author><name>Gmimg</name></author><summary type="html">190722</summary></entry><entry><title type="html">Diary</title><link href="http://localhost:4000/posts/Diary" rel="alternate" type="text/html" title="Diary" /><published>2019-08-01T00:00:00+09:00</published><updated>2019-08-01T00:00:00+09:00</updated><id>http://localhost:4000/posts/Diary</id><content type="html" xml:base="http://localhost:4000/posts/Diary"></content><author><name>Gmimg</name></author><summary type="html"></summary></entry><entry><title type="html">Rtos</title><link href="http://localhost:4000/posts/RTOS" rel="alternate" type="text/html" title="Rtos" /><published>2019-07-29T00:00:00+09:00</published><updated>2019-07-29T00:00:00+09:00</updated><id>http://localhost:4000/posts/RTOS</id><content type="html" xml:base="http://localhost:4000/posts/RTOS">&lt;h1 id=&quot;rtos-porting--programming&quot;&gt;RTOS Porting &amp;amp; Programming&lt;/h1&gt;

&lt;h2 id=&quot;임베디드-시스템-및-rtos-개요&quot;&gt;임베디드 시스템 및 RTOS 개요&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;임베디드 시스템&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;특정한 목적을 수행하기 위해 필요한 하드웨어와 소프트웨어를 가지고 있는 시스템.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Real-Time(실시간) 시스템&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;주어진 입력 조건을 정해진 &lt;em&gt;시간 내에&lt;/em&gt; 처리하는 시스템&lt;/p&gt;

&lt;h3 id=&quot;arm-프로세서&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/ARM_%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98&quot;&gt;ARM 프로세서&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Advanced RISC Machine&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;arm-보드의-최대강점&quot;&gt;ARM 보드의 최대강점&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;저전력 프로세서&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;많은 반도체 회사들과 License를 맺고 ARM 기반 프로세서 생산&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;cortex-profile-종류별-특성&quot;&gt;Cortex Profile 종류별 특성&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Cortex-A : Application용 - 스마트폰&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Cortex-R : Real time용 (Embedded) - 자동차, 항공, 산업용&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Cortex-M : Microcontroller(MICOM) - 저가 시스템&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;arm-프로세서의-구조&quot;&gt;ARM 프로세서의 구조&lt;/h4&gt;

&lt;p&gt;ALU를 포함하는 CPU 격의 &lt;strong&gt;ARM CORE&lt;/strong&gt;,&lt;/p&gt;

&lt;p&gt;Cache, NVIC 등 Coprocessors를 포함하는 &lt;strong&gt;ARM Processor&lt;/strong&gt;,&lt;/p&gt;

&lt;p&gt;제조사에서 만드는 I.C, DMA, UART, LCD, Timer, RTC 등 Peripherals을 포함하는 &lt;strong&gt;SoC&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;임베디드-시스템에서의-운영체제-필요성&quot;&gt;임베디드 시스템에서의 운영체제 필요성&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;개발자가 직접 작성하는 펌웨어로 구현이 어려운 기능
    &lt;ul&gt;
      &lt;li&gt;네트워크&lt;/li&gt;
      &lt;li&gt;멀티미디어&lt;/li&gt;
      &lt;li&gt;다른 시스템과 호환성을 위한 기능(File system)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;리얼타임의 필요성 부각(정해진 시간내에 처리)&lt;/li&gt;
  &lt;li&gt;멀티태스킹 기능 필요&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;운영체제&quot;&gt;운영체제&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;제한된 시스템 자원을 효율적으로 사용할 수 있도록 관리&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;컴퓨터 시스템과 사용자간의 인터페이스 기능을 담당하여 사용자에게 편의 제공&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;컴퓨터 시스템의 전반적인 동작을 제어하고 조정하는 시스템 프로그램들의 집합&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;실시간-시스템-개념&quot;&gt;실시간 시스템 개념&lt;/h2&gt;

&lt;p&gt;펌웨어로 처리시 단점 1. 응답시간에 영향을 줌 2. 우선순위가 없음.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;RTOS 사용 이유&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;실시간 이벤트에 대한 응답시간 향상&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;운선순위 부여하여 중요한 처리를 우선적으로 진행&lt;/li&gt;
  &lt;li&gt;시스템 확장 편의성&lt;/li&gt;
  &lt;li&gt;개발 효율성&lt;/li&gt;
  &lt;li&gt;커널이 제공하는 추가기능&lt;/li&gt;
  &lt;li&gt;유지보수&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;태스크&quot;&gt;태스크&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;태스크 우선순위&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;태스크 스택&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;잠시동안 저장공간 사용&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;태스크에서 사용하는 레지스터 등 보존&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;태스크 상태(Dormant, Ready, Running, Wating)&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;assets\img\Embedded\task_diagram.jpg&quot; alt=&quot;task_diagram&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Scheduler : 가장 높은 우선순위의 태스크를 선택하는 방식&lt;/p&gt;

&lt;p&gt;preemptive Kernel(선점형 커널) : 특정 태스크의 수행을 중단 시키고 다른 태스크를 수행시킬 수 있는 커널&lt;/p&gt;

&lt;p&gt;Reentrancy(재진입성) : 코드의 재진입이 가능(중단 후 재실행 가능)&lt;/p&gt;

&lt;p&gt;Concurrency(동시성 문제) : 동시에 공유자원에 액세스 했을 때 발생할 수 있는 문제&lt;/p&gt;

&lt;p&gt;동시성 문제 해결법 -&amp;gt; Mutual Exclusion&lt;/p&gt;

&lt;p&gt;Mutual Exclusion&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Critical Section(Region)&lt;/p&gt;

    &lt;p&gt;인터럽트를 포함한 다른 코드의 수행에 의해 중단 되어서는 안되는 영역&lt;/p&gt;

    &lt;p&gt;간단하지만 인터럽트 금지 시간이 길어지면 문제 발생&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;공유자원 사용하는 동안 Scheduling 금지&lt;/p&gt;

    &lt;p&gt;높은 우선순위의 태스크가 CPU를 점유하는 시점이 지연될 수 있음&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Semaphore(공용키) 사용&lt;/p&gt;

    &lt;p&gt;우선순위가 높아도 Semaphore를 다른 태스크가 가지고 있으면 Wait상태가 됨&lt;/p&gt;

    &lt;p&gt;공유자원의 access time이 짧은 경우 위의 두 방법이 더 효과적일 수 있음&lt;/p&gt;

    &lt;p&gt;멀티코어에서는 위미가 없음, (스핀락 사용)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Deadlock : 다른 태스크에서 사용 중인 자원을 무한히 기다리는 상태&lt;/p&gt;

&lt;p&gt;Deadlock방지&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;순서대로 자원 획득, 역순으로 자원 양도&lt;/li&gt;
  &lt;li&gt;타임아웃을 지정&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Interrupts&lt;/p&gt;</content><author><name>Gmimg</name></author><category term="Embedded" /><category term="Embedded" /><category term="RTOS" /><summary type="html">RTOS Porting &amp;amp; Programming</summary></entry><entry><title type="html">추천교재</title><link href="http://localhost:4000/posts/%EC%B6%94%EC%B2%9C%EA%B5%90%EC%9E%AC" rel="alternate" type="text/html" title="추천교재" /><published>2019-07-27T00:00:00+09:00</published><updated>2019-07-27T00:00:00+09:00</updated><id>http://localhost:4000/posts/%EC%B6%94%EC%B2%9C%EA%B5%90%EC%9E%AC</id><content type="html" xml:base="http://localhost:4000/posts/%EC%B6%94%EC%B2%9C%EA%B5%90%EC%9E%AC">&lt;ul class=&quot;task-list&quot;&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;Clean Code&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;윤성우의 열혈 자료구조&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;&lt;a href=&quot;http://order.kyobobook.co.kr/cart/cartListMain#&quot;&gt;C로 배우는 알고리즘 1&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;C++ STL&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;Effective C++&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;알고리즘 문제 해결 전략 세트&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;Clean Software&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;GoF의 디자인 패턴&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;Code Complete&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;생각하는 프로그래밍&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;리팩토링 : 코드 품질을 개선하는 객체지향 사고법&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;Inntroduction to Algorithms&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;컴퓨터 프로그램의 구조와 해석&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;컴퓨터시스템구조&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;운영체제&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;컴퓨터 구조 및 설계&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;임베디드 레시피&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;ARM 리눅스 커널&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;해커의 기쁨&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;&lt;a href=&quot;http://www.aladin.co.kr/shop/wproduct.aspx?ItemId=899792&quot;&gt;인사이드 머신&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;&lt;a href=&quot;http://www.aladin.co.kr/shop/wproduct.aspx?ItemId=18480581&quot;&gt;리눅스 커널 심층 분석&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;
    &lt;p&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;&lt;a href=&quot;http://order.kyobobook.co.kr/cart/cartListMain#&quot;&gt;임베디드 리눅스 프로그래밍 완전정복&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;&lt;a href=&quot;http://order.kyobobook.co.kr/cart/cartListMain#&quot;&gt;코드로 알아보는 ARM 리눅스 커널&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Gmimg</name></author><summary type="html">Clean Code 윤성우의 열혈 자료구조 C로 배우는 알고리즘 1</summary></entry><entry><title type="html">Embedded C</title><link href="http://localhost:4000/posts/C-lang" rel="alternate" type="text/html" title="Embedded C" /><published>2019-07-27T00:00:00+09:00</published><updated>2019-07-27T00:00:00+09:00</updated><id>http://localhost:4000/posts/C%20lang</id><content type="html" xml:base="http://localhost:4000/posts/C-lang">&lt;h1 id=&quot;embedded-c-programming&quot;&gt;Embedded C Programming&lt;/h1&gt;

&lt;h2 id=&quot;들어가며&quot;&gt;들어가며&lt;/h2&gt;

&lt;p&gt;이 포스팅은 2019년 여름 멀티캠퍼스에서 ‘청년취업아카데미 스마트 디바이스 프로그래밍’ 과정을 수강하며 배운것을 정리하는 것을 목적으로 합니다. 임베디드 회사 윌텍(Willtek)에서 강사님을 모셔서 배웠습니다. IDE는 visual stdio 2005 입니다.&lt;/p&gt;

&lt;p&gt;1주차에서 3주차는 C언어와 자료구조, 알고리즘을 공부했습니다. 틀린 내용이 있을 수 있으므로 지적이나 피드백은 감사하게 받겠습니다.&lt;/p&gt;

&lt;h2 id=&quot;임베디드-시스템&quot;&gt;임베디드 시스템&lt;/h2&gt;

&lt;p&gt;임베디드 시스템은 다양한 분야에서 사용되는 만큼 각자 다른 목적을 가지고있다. 대부분은 몇가지 기능만을 수행하도록 설계된다. 또한 수백개의 규모로 양산되기 때문에 가격도 중요하다. 즉 메모리를 최대한 활용하고 적당한 속도의 싼 마이크로 프로세서를 사용하는게 좋다. 또한 신뢰성(안정성)을 중요시한다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%9E%84%EB%B2%A0%EB%94%94%EB%93%9C_%EC%8B%9C%EC%8A%A4%ED%85%9C&quot;&gt;임베디드 시스템&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;c언어&quot;&gt;C언어&lt;/h2&gt;

&lt;p&gt;하드웨어에 가장 가까운 코드는 &lt;strong&gt;기계어&lt;/strong&gt;로 0과 1로 이루어져있고, 이것을 인간의 관점에서 이해하기 쉽게 기계어와 1:1 매칭 구성한것이 &lt;strong&gt;어셈블리어&lt;/strong&gt;이다.  여기까지는 인간의 설계 보단 기계의 인식과정에 중점을 두어 &lt;u&gt;Low-Level 언어&lt;/u&gt;로 불린다. 기계어와 어셈블리어는 CPU 아키텍처마다 다르다. 예를들어 인텔과 AMD의 CPU에서 사용하는 어셈블리어는 다르다.&lt;/p&gt;

&lt;p&gt;같은 프로그램이어도 다른 기계어와 어셈블리어를 만들어야하는 불필요한 과정을 생략하기위해 C언어가 만들어졌다. C언어는 같은 코드에도 컴파일러가 플랫폼에 맞는 다른 어셈블리어로 전환해준다. 이로서 인간은 플랫폼과 상관없이 자신이 설계하고자하는 프로그램을 설계할 수있게 되었고, &lt;u&gt;High-Level 언어&lt;/u&gt;로 불린다. 참고로 High-Level 언어로는 JAVA와 C언어 기반으로 짜여진 Python이있다.&lt;/p&gt;

&lt;p&gt;High-Level 언어는 Low-Level의 언어에 비해 생산성은 매우 높으나, 자원활용(메모리,시간) 효율성이 떨어진다. 일반 개발자가 Low-Level 언어를 사용할 일은 거의 없으나, 임베디드 업계에서는 자원활용이 매우 중요하고, 또 컴파일러가 개발되지 않은 환경에서 어셈블리어를 다루는 개발자가 많다고 한다.&lt;/p&gt;

&lt;p&gt;참고로 같은 C언어도 버전(컴파일러)에 따라 오류와 경고가 달라질 수 있다. 안정성, 신뢰성이 매우 중요한 항공,군사 업계에서는 이러한 충돌 가능성을 줄이기 위해 &lt;a href=&quot;https://ko.wikipedia.org/wiki/MISRA_C&quot;&gt;MISRA&lt;/a&gt; 같은 개발 표준을 사용한다.&lt;/p&gt;

&lt;p&gt;(컴파일러에 대한 이야기)&lt;/p&gt;

&lt;p&gt;참고&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/C_(%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D_%EC%96%B8%EC%96%B4)&quot;&gt;C 언어&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%BB%B4%ED%93%A8%ED%84%B0_%EA%B5%AC%EC%A1%B0&quot;&gt;컴퓨터 구조&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%8B%9C%EC%8A%A4%ED%85%9C_%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98&quot;&gt;시스템 아키텍처&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/X86&quot;&gt;x86&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%ED%8C%8C%EC%9D%B4%EC%8D%AC&quot;&gt;파이썬&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%BB%B4%ED%8C%8C%EC%9D%BC%EB%9F%AC&quot;&gt;컴파일러&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/GNU_%EC%BB%B4%ED%8C%8C%EC%9D%BC%EB%9F%AC_%EB%AA%A8%EC%9D%8C&quot;&gt;GCC&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;상수&quot;&gt;상수&lt;/h2&gt;

&lt;p&gt;CPU는 0과 1이라는 2진수를 사용하기 때문에 우리가 일상생활에서 사용하는 10진수와 다르다. 수에 대해 이해 할 수록 프로그래밍 할 때 도움이된다. 또한 2진수는 보기가 불편하여 4자리씩 묶어서 16진수로 표현한다.  ( 0001(2) == 0x1)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%B9%84%ED%8A%B8&quot;&gt;bit&lt;/a&gt;는 CPU가 인식할수 있는 최소단위이다. 즉 0과 1 이므로 2진수 한자리를 bit로 정의한다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%B0%94%EC%9D%B4%ED%8A%B8&quot;&gt;byte&lt;/a&gt;(B)는 일정한 갯수의 비트로 이루어진 비트열로 주소로 표현할 수 있는 가장 작은 단위라고 생각하면 된다. 대부분은 8bit이다. 그러므로 8bit는 16진수 두자리로 표현할 수 있다. (1byte == 0x00)&lt;/p&gt;

&lt;p&gt;변환법 참고 : &lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%9D%B4%EC%A7%84%EB%B2%95&quot;&gt;2진수&lt;/a&gt; - 10진수 - &lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%8B%AD%EC%9C%A1%EC%A7%84%EB%B2%95&quot;&gt;16진수&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;c언어의-데이터-타입&quot;&gt;C언어의 데이터 타입&lt;/h3&gt;

&lt;p&gt;정수의 데이터 타입&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;데이터 타입&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;크키(B)&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;최소값&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;최대값&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;char&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;127&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;signed char&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;-128&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;127&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;unsigned char&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;255&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;signed short&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;-32,768&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;32,768&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;unsigned short&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;65,535&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;signed int&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;-2,147,483,648&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;2,147,483,648&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;unsigned int&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;4,294,967,295&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;signed long&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;-2,147,483,648&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;2,147,483,648&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;unsigned long&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;4,294,967,295&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;signed long long&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;-9,223,372,036,854,775,808&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;9,223,372,036,854,775,808&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;unsigned long long&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;‭18,446,744,073,709,551,615&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;integer(정수)는 시스템의 기본연산 단위를 사용하여 컴파일러에 따라 다르다. (16bit =&amp;gt;2byte, 32=&amp;gt;4byte, 64=&amp;gt;4byte) 대부분의 경우는 4byte이다.&lt;/p&gt;

&lt;p&gt;실수의 데이터 타입&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Type&lt;/th&gt;
      &lt;th&gt;크기&lt;/th&gt;
      &lt;th&gt;최소값&lt;/th&gt;
      &lt;th&gt;최대값&lt;/th&gt;
      &lt;th&gt;유효 자릿수&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;float&lt;/td&gt;
      &lt;td&gt;4B&lt;/td&gt;
      &lt;td&gt;1.175494351E - 38&lt;/td&gt;
      &lt;td&gt;3.402823466E + 38&lt;/td&gt;
      &lt;td&gt;10진수 6자리&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;double&lt;/td&gt;
      &lt;td&gt;8B&lt;/td&gt;
      &lt;td&gt;2.250738585072014E -308&lt;/td&gt;
      &lt;td&gt;1.7976931348623158E + 308&lt;/td&gt;
      &lt;td&gt;10진수 15자리&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;실수는 unsigned type이 없다.&lt;/p&gt;

&lt;h3 id=&quot;suffix&quot;&gt;suffix&lt;/h3&gt;

&lt;p&gt;c언어에서 사용하는 숫자(100,10.1)은 시스템의 기본 정수,실수를 따른다.&lt;/p&gt;

&lt;p&gt;시스템의 기본 정수 : 100 =&amp;gt; signed integer
시스템의 기본 실수 : 10.1 =&amp;gt; double&lt;/p&gt;

&lt;p&gt;숫자의 타입 바꾸기 위해서 suffix 사용&lt;/p&gt;

&lt;p&gt;100 -&amp;gt; signed int&lt;/p&gt;

&lt;p&gt;100U -&amp;gt; unsigned int&lt;/p&gt;

&lt;p&gt;100L -&amp;gt; long&lt;/p&gt;

&lt;p&gt;100UL -&amp;gt; unsigned long&lt;/p&gt;

&lt;p&gt;100LL -&amp;gt; long long&lt;/p&gt;

&lt;p&gt;100ULL -&amp;gt; unsinged long long&lt;/p&gt;

&lt;p&gt;float 유효자릿수 10진수 6자리
double 유효자릿수 10진수 15자리&lt;/p&gt;

&lt;p&gt;float(4B) -&amp;gt; 3.14f, -712.34E2f&lt;/p&gt;

&lt;p&gt;long double(8B) -&amp;gt; 3.14L, -712.34e2l&lt;/p&gt;

&lt;h3 id=&quot;문자열&quot;&gt;문자열&lt;/h3&gt;

&lt;p&gt;c언어에서 &lt;stdio.h&gt;라는 표준 입출력 라이브러리 문자를 입출력한다. 문자열을 저장하는 방법은 char형 배열에 아스키([ASCII](https://ko.wikipedia.org/wiki/ASCII))코드 대응하는 숫자를 저장한다. 즉 개발자는 문자를 넣지만 컴퓨터는 자동으로 숫자로 변환하여 저장한다는 뜻이다.&lt;/stdio.h&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;
void main(void)
{
	printf(&quot;Hello&quot;);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;printf&quot;&gt;printf&lt;/h4&gt;

&lt;dl&gt;
  &lt;dt&gt;printf 함수는 아스키코드로 이루어진 문자열상수를 콘솔에 문자로 변환해서 보여준다.&lt;/dt&gt;
  &lt;dt&gt;“Hello” =&amp;gt; 문자열 상수&lt;/dt&gt;
  &lt;dd&gt;char str[]= “Hello” -&amp;gt; str은 char 형 배열로 6개가 들어감 5개문자(‘H’, ‘e’, ‘l’, ‘l’, ‘o’) + ‘\0’(0x00)&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;char형 배열이 문자열로 인식되기 위해서는 ‘\0’ 문자를 포함해야한다.&lt;/p&gt;

&lt;p&gt;‘0’ 문자는 아스키코드로 0x20 값이다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;‘\0’은 아스키코드로 0x00(NUL)을 의미한다.&lt;/p&gt;

  &lt;p&gt;NULL은 헤더파일에 정의된 매크로로 null pointer constant, 즉 (void *)0 인 포인터 타입이다.&lt;/p&gt;

  &lt;p&gt;NULL - 0x00000000 or 0x00000000’00000000 (32 vs 64 bit)&lt;/p&gt;

  &lt;p&gt;char *ptr = NULL 과 char *ptr = 0 은 &lt;strong&gt;같은 의미&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;int a = NULL 과 int a = 0 의 의미는 &lt;strong&gt;다릅&lt;/strong&gt;니다.&lt;/p&gt;

  &lt;p&gt;출처: https://noirstar.tistory.com/16&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;문자열에는 다음과같은 특수문자들이 있다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Escape Sequence&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;ASCII&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;기능&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;\a&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0x07&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;경고음, Alarm&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;\b&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0x08&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;New line, 줄 바꿈&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;\t&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0x09&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;탭(TAB)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;\n&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0x0a&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;줄 바꾸기, New Line&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;\r&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0x0d&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;줄 처음으로 가기, Carriage Return&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;\\&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0x5c&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;백슬레쉬&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;\’&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0x27&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;홑따옴표&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;\’’&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0x22&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;겹따옴표&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;\o&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0x00&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;NULL, 문자열의 끝&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;형식지정자&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;printf 함수에서 변수에 저장된 상수를 출력할 수 있는데 이때 타입에 따라 다음과같은 형식지정자를 써주면 된다.&lt;/p&gt;

&lt;p&gt;integer : %d&lt;/p&gt;

&lt;p&gt;unsigned int : %u&lt;/p&gt;

&lt;p&gt;long : %ld&lt;/p&gt;

&lt;p&gt;unsigned long : %lu&lt;/p&gt;

&lt;p&gt;char : %c&lt;/p&gt;

&lt;p&gt;문자열 배열 : %s&lt;/p&gt;

&lt;p&gt;float, double : %f(부동소숫점), %e(지수표기법)&lt;/p&gt;

&lt;p&gt;long double : %lf, %le&lt;/p&gt;

&lt;h4 id=&quot;scanf와-scanf_s&quot;&gt;scanf와 scanf_s&lt;/h4&gt;

&lt;p&gt;scanf는 (“%s”, 주소값)을 인자로 받는다.&lt;/p&gt;

&lt;p&gt;최신버전의 컴파일러에서는 scanf 함수 대신 scanf_s를 사용 하도록 권유(거의 강요) 하고있다. 기존에 쓰던 scanf가 지정된 버퍼의 크기보다 많은양의 문자를 넣을 수 있기때문(&lt;strong&gt;버퍼 오버플로우&lt;/strong&gt;)에 보안상문제로 업데이트 한것이다. scanf_s 는 (“%s”, &lt;strong&gt;배열의 주소, 배열의 크기&lt;/strong&gt;) 를 인자로 받는다. 일정 버전(VS2010) 이상의 컴파일러에서 에러없이 scanf 를 사용하기위해 ‘#pragma warning (disable:4996)’ 또는 ‘#define _CRT_NO_SECURE_WARNINGS’을 코드 최상단에 선언해주면 된다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;서식문자&lt;/th&gt;
      &lt;th&gt;입력데이터&lt;/th&gt;
      &lt;th&gt;대응되는 인수형&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;d, D&lt;/td&gt;
      &lt;td&gt;10진 정수&lt;/td&gt;
      &lt;td&gt;int *, long *&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;o, O&lt;/td&gt;
      &lt;td&gt;8진 정수&lt;/td&gt;
      &lt;td&gt;int *, long *&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;i, I&lt;/td&gt;
      &lt;td&gt;정수&lt;/td&gt;
      &lt;td&gt;int *, long *&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;u, U&lt;/td&gt;
      &lt;td&gt;부호 없는 10진 정수&lt;/td&gt;
      &lt;td&gt;unsigned int *, unsigned long *&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;x, X&lt;/td&gt;
      &lt;td&gt;16진 정수&lt;/td&gt;
      &lt;td&gt;int *&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;e, E&lt;/td&gt;
      &lt;td&gt;부동 소수점&lt;/td&gt;
      &lt;td&gt;double *&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;f&lt;/td&gt;
      &lt;td&gt;부동 소수점&lt;/td&gt;
      &lt;td&gt;double *&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;g, G&lt;/td&gt;
      &lt;td&gt;부동 소수점&lt;/td&gt;
      &lt;td&gt;double *&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;s&lt;/td&gt;
      &lt;td&gt;문자열&lt;/td&gt;
      &lt;td&gt;char *&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;c&lt;/td&gt;
      &lt;td&gt;문자&lt;/td&gt;
      &lt;td&gt;char *&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;n&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;int *&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;p&lt;/td&gt;
      &lt;td&gt;포인터&lt;/td&gt;
      &lt;td&gt;far * or near *&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;fflush(stdin)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;scanf에서 지정된 입력 개수보다 더 많이 입력 받으면 입력버퍼에 남는데 이 버퍼를 지워주기위해 사용되는 함수이다.&lt;/p&gt;

&lt;h2 id=&quot;변수&quot;&gt;변수&lt;/h2&gt;

&lt;p&gt;변수의 선언방법은 다음과 같다.&lt;/p&gt;

&lt;p&gt;Type 변수이름;&lt;/p&gt;

&lt;p&gt;선언과 함께 초기화하는 방법은 다음과 같다.&lt;/p&gt;

&lt;p&gt;Type 변수이름 = xxx; //변수가 선언되어있지 않을때만 가능&lt;/p&gt;

&lt;p&gt;변수의 종류는 전역변수와 지역변수로 크게 두가지이다.&lt;/p&gt;

&lt;p&gt;컴파일러 버전에 따라 다르지만 &lt;a href=&quot;https://ko.wikipedia.org/wiki/C99&quot;&gt;c99&lt;/a&gt; 이전 표준(gcc 2.x 버전까지)에서 지역변수의 변수 선언은 항상 선두에 있어야한다.&lt;/p&gt;

&lt;p&gt;지역변수의 수명은 블록({ }, brace) 에서 사용가능하다.&lt;/p&gt;

&lt;p&gt;어떤 변수의 메모리를 호출하기 위해 &amp;amp;(ampersand)(address of)연산자를 사용한다.&lt;/p&gt;

&lt;p&gt;주소는 1B메모리 마다 붙이며 주소값은 메모리 크기에 따라 다르다. (32bit-&amp;gt; 4byte)&lt;/p&gt;

&lt;p&gt;sizeof 연산자는 변수의 type의 크기(byte)를 반환해준다.&lt;/p&gt;

&lt;p&gt;정수가 메모리에 저장되는 순서는 프로세서 제조사별로 다르다.&lt;/p&gt;

&lt;p&gt;예를들어 인텔은 Littel Endian, 모토롤라는 Big Endian 방식이다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%97%94%EB%94%94%EC%96%B8&quot;&gt;Littel Endian&lt;/a&gt;은 변수가 높은 메모리주소에서 낮은메모리주소로 쌓이는 방식이다.&lt;/p&gt;

&lt;h2 id=&quot;디버깅&quot;&gt;디버깅&lt;/h2&gt;

&lt;p&gt;IDE 마다 다른 디버깅 모드를 지원한다. VS에서 디버깅은 간단하게 F5(디버깅), F9(중단점), F10(프로시저단위실행), F11(한단계씩 코드실행) 와 조사식, 메모리 덤프로 진행한다.&lt;/p&gt;

&lt;p&gt;직접해보는게 더 빨리 익힐 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;연산자&quot;&gt;연산자&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dojang.io/mod/page/view.php?id=188&quot;&gt;연산자 우선순위&lt;/a&gt; 를 잘 알면 여러줄의 코드를 짧게 줄일 수 있고, 연산 효율을 높일 수 있다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;우선순위&lt;/th&gt;
      &lt;th&gt;연산자&lt;/th&gt;
      &lt;th&gt;설명&lt;/th&gt;
      &lt;th&gt;결합 방향&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;(postfix) &lt;code class=&quot;highlighter-rouge&quot;&gt;++&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;--&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;후위 증가와 감소&lt;/td&gt;
      &lt;td&gt;→&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;함수 호출&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;배열 첨자&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;참조로 요소 선택&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;포인터를 통해 요소 선택&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;(prefix) &lt;code class=&quot;highlighter-rouge&quot;&gt;++&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;--&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;전위 증가와 감소&lt;/td&gt;
      &lt;td&gt;←&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;(sign) &lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;단항 증가감소 연산자&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;!&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;~&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;논리 NOT, 비트NOT&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;(type)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;타입 캐스트&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;역참조&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;주소값&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sizeof&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;자료형의 크기&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;%&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;곱셈 나눗셈 나머지&lt;/td&gt;
      &lt;td&gt;→&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;덧셈 뺄셈&lt;/td&gt;
      &lt;td&gt;→&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&amp;lt;&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;비트 왼쪽 쉬프트와 오른쪽 쉬프트&lt;/td&gt;
      &lt;td&gt;→&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;=&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;=&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;작음, 작거나 같음, 큼, 크거나 같음&lt;/td&gt;
      &lt;td&gt;→&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;!=&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;관계 = 와 ≠&lt;/td&gt;
      &lt;td&gt;→&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;비트 AND&lt;/td&gt;
      &lt;td&gt;→&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;^&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;비트 XOR&lt;/td&gt;
      &lt;td&gt;→&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;비트 OR&lt;/td&gt;
      &lt;td&gt;→&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;논리 AND&lt;/td&gt;
      &lt;td&gt;→&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;||&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;논리 OR&lt;/td&gt;
      &lt;td&gt;→&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;? :&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;삼항 연산자&lt;/td&gt;
      &lt;td&gt;←&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;직접 할당&lt;/td&gt;
      &lt;td&gt;←&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;+=&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;-=&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;*=&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;/=&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;%=&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;덧셈, 뺄셈, 곱셈, 나눗셈, 나머지 연산 후 할당&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&amp;lt;=&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&amp;gt;=&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;비트를 왼쪽, 오른쪽으로 시프트한 후 할당&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;=&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;^=&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;|=&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;비트 AND, XOR, OR 연산 후 할당&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;,&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;콤마&lt;/td&gt;
      &lt;td&gt;→&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;% 의 피연산자는 양의 정수이어야함 (음수면 컴파일러 의존) 실수를 피연산자로 취할 수 없음.&lt;/p&gt;

&lt;h2 id=&quot;함수&quot;&gt;함수&lt;/h2&gt;

&lt;p&gt;#include 뒤에 파일은 &amp;lt;&amp;gt; 또는 ““을 사용하여 지정하게 된다.&lt;/p&gt;

&lt;p&gt;&amp;lt;&amp;gt; 는 컴파일러를 설치할 때 만들어진 표준 폴더에서 해당 파일을 찾아서 복사하고, “” 는 현재 작업중인 폴더에서 찾고 없으면 표준 폴더에서 찾는다.&lt;/p&gt;

&lt;p&gt;표준 폴더는 ‘C:\Program Files (x86)\Windows Kits\10\Include’&lt;/p&gt;

&lt;p&gt;함수의 입력을 parameter(인자), 출력을 return(반환), 작업을 operation(기능)이라고 함. 함수에 넣어주는 값을 argument(인수)라하고 이 값이 parameter로 전달 됨.&lt;/p&gt;

&lt;p&gt;함수 만드는 형식&lt;/p&gt;

&lt;p&gt;return type + 함수명 + (parameter list) + { code }&lt;/p&gt;

&lt;p&gt;함수를 쓰겠다고 형식을 알려주는 것이 선언, 함수 본체를 만드는 것은 정의.&lt;/p&gt;

&lt;h2 id=&quot;분기문&quot;&gt;분기문&lt;/h2&gt;

&lt;h3 id=&quot;if문&quot;&gt;if문&lt;/h3&gt;

&lt;p&gt;if(조건식) 실행문;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;숏서킷 원리&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;(A &amp;amp;&amp;amp; B) 에서 A가 false면 B는 생략한다, (A&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;B) 에서 A가 True면 B는 생략한다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;즉, 조건문에서는 연산을 하지 않는게 좋고, 조건의 확률을 따져서 조건식을 배치하면 효율이좋다.&lt;/p&gt;

&lt;h3 id=&quot;조건연산자&quot;&gt;조건연산자&lt;/h3&gt;

&lt;p&gt;A ? B : C&lt;/p&gt;

&lt;p&gt;if는 문장을 만들고, ? : 는 식을 만든다.&lt;/p&gt;

&lt;h3 id=&quot;switch--case문&quot;&gt;switch ~ case문&lt;/h3&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1번&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//break가 없으면 다음 case문으로 들어간다.
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2번&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;3번&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;switch의 조건식은 정수식(실수식 불가). case의 비교 값은 상수식만 가능(변수식 불가능). 보통 enum 과 함께 사용한다.&lt;/p&gt;

&lt;h2 id=&quot;반복문&quot;&gt;반복문&lt;/h2&gt;

&lt;h3 id=&quot;for문&quot;&gt;for문&lt;/h3&gt;

&lt;p&gt;for(초기화식;조건식;후처리식) 실행문;&lt;/p&gt;

&lt;p&gt;for(;;) : 무한루프.&lt;/p&gt;

&lt;p&gt;break : 루프를 빠져나옴.&lt;/p&gt;

&lt;p&gt;continue : 코드를 중단하고 후처리식으로 돌아감.&lt;/p&gt;

&lt;h3 id=&quot;while문&quot;&gt;while문&lt;/h3&gt;

&lt;p&gt;while(조건식) 실행문;&lt;/p&gt;

&lt;h2 id=&quot;유효범위와-기억클래스&quot;&gt;유효범위와 기억클래스&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;컴파일과정&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets\img\Embedded\compile.jpg&quot; alt=&quot;compile&quot; /&gt;&lt;/p&gt;

&lt;p&gt;변수의 선언&lt;/p&gt;

&lt;p&gt;specifier + modifier + identifier ;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets\img\Embedded\Scope_Lifetime.png&quot; alt=&quot;Scope_Lifetime&quot; /&gt;&lt;/p&gt;

&lt;p&gt;C언어 공부에 좋은 사이트&lt;/p&gt;

&lt;p&gt;http://tcpschool.com/c/intro&lt;/p&gt;</content><author><name>Gmimg</name></author><category term="Embedded" /><category term="Embedded" /><category term="C" /><summary type="html">Embedded C Programming</summary></entry><entry><title type="html">To do</title><link href="http://localhost:4000/posts/To-Do" rel="alternate" type="text/html" title="To do" /><published>2019-07-27T00:00:00+09:00</published><updated>2019-07-27T00:00:00+09:00</updated><id>http://localhost:4000/posts/To%20Do</id><content type="html" xml:base="http://localhost:4000/posts/To-Do">&lt;p&gt;학교에서 했던 경험&lt;/p&gt;

&lt;p&gt;1학년&lt;/p&gt;

&lt;p&gt;CAD/CAM&lt;/p&gt;

&lt;p&gt;2학년&lt;/p&gt;

&lt;p&gt;3학년&lt;/p&gt;

&lt;p&gt;4학년&lt;/p&gt;</content><author><name>Gmimg</name></author><summary type="html">학교에서 했던 경험</summary></entry><entry><title type="html">Term</title><link href="http://localhost:4000/posts/Term" rel="alternate" type="text/html" title="Term" /><published>2019-07-27T00:00:00+09:00</published><updated>2019-07-27T00:00:00+09:00</updated><id>http://localhost:4000/posts/Term</id><content type="html" xml:base="http://localhost:4000/posts/Term">&lt;p&gt;Modem : Modulator + Demodulator&lt;/p&gt;

&lt;p&gt;Codec : Coder + Decoder&lt;/p&gt;

&lt;p&gt;비메모리&lt;/p&gt;</content><author><name>Gmimg</name></author><summary type="html">Modem : Modulator + Demodulator</summary></entry><entry><title type="html">Plan</title><link href="http://localhost:4000/posts/Plan" rel="alternate" type="text/html" title="Plan" /><published>2019-07-27T00:00:00+09:00</published><updated>2019-07-27T00:00:00+09:00</updated><id>http://localhost:4000/posts/Plan</id><content type="html" xml:base="http://localhost:4000/posts/Plan">&lt;p&gt;나는 지금까지 공부를 하는데에 철학이 없었다.&lt;/p&gt;

&lt;p&gt;학습의 형식에만 중점을 두고 어떻게하면 내가 노력을 했는지에 대해 보여주기에 집중했다. (지금 글을 쓰고있는 이유도 그중 하나). 좋은 책을 검색하고 (읽지는 않고) 모으기만 하고있다.&lt;/p&gt;

&lt;p&gt;생각하고 생각하고 또 생각하자&lt;/p&gt;

&lt;p&gt;임베디드 개발자가 되기로한 이유는 뭐가 있을까?&lt;/p&gt;

&lt;p&gt;내 전공과의 연계성&lt;/p&gt;

&lt;p&gt;전문성에대한 매력&lt;/p&gt;

&lt;p&gt;연차가 쌓일수록 노하우&lt;/p&gt;

&lt;p&gt;소주가 아닌 위스키&lt;/p&gt;

&lt;p&gt;글을 잘 쓰는 방법&lt;/p&gt;

&lt;p&gt;먼저 기업의 채용공고를 보고 지원자격과 우대사항에대해 정리한다.&lt;/p&gt;

&lt;p&gt;알고리즘 공부&lt;/p&gt;

&lt;p&gt;코딩을 하기전에 프로그램 설계를 완벽하게 하기.&lt;/p&gt;

&lt;p&gt;여러 알고리즘을 짜기보단 하나를 짜더라도 내가 짠 코드를 철저하게 분석한다.&lt;/p&gt;

&lt;p&gt;착각하는것.&lt;/p&gt;

&lt;p&gt;언어는 수단&lt;/p&gt;

&lt;p&gt;C 언어 와 C++ 현직자 수준으로 내가 머리속으로 생각한 것을 자유자재로 구현할 정도로&lt;/p&gt;

&lt;p&gt;나만의 노하우 쌓기&lt;/p&gt;

&lt;p&gt;코드 품질 높이기&lt;/p&gt;

&lt;p&gt;이후 생산성을 높이기 위해 파이썬으로 다양한 활동&lt;/p&gt;

&lt;p&gt;컴퓨터 (시스템) 구조&lt;/p&gt;

&lt;p&gt;Operating System 공부&lt;/p&gt;

&lt;p&gt;깃허브에 꾸준히 업로드하기.&lt;/p&gt;

&lt;p&gt;나에대한 메타인지&lt;/p&gt;

&lt;p&gt;컴퓨터 구조&lt;/p&gt;

&lt;p&gt;https://covenant.tistory.com/103?category=773722&lt;/p&gt;

&lt;p&gt;운영체제 공부&lt;/p&gt;

&lt;p&gt;https://covenant.tistory.com/100?category=773722&lt;/p&gt;

&lt;p&gt;http://www.kocw.net/home/search/kemView.do?kemId=978503&lt;/p&gt;

&lt;p&gt;http://www.kocw.net/home/m/search/kemView.do?kemId=998138&lt;/p&gt;

&lt;p&gt;http://blog.naver.com/PostList.nhn?blogId=hjyang0&amp;amp;parentCategoryNo=6&lt;/p&gt;

&lt;p&gt;http://snui.snu.ac.kr/ocw/index.php?mode=view&amp;amp;id=623#class_room-tab&lt;/p&gt;

&lt;p&gt;2019 하반기&lt;/p&gt;

&lt;p&gt;C언어&lt;/p&gt;</content><author><name>Gmimg</name></author><summary type="html">나는 지금까지 공부를 하는데에 철학이 없었다.</summary></entry><entry><title type="html">Discrete mathematics(이산수학)</title><link href="http://localhost:4000/posts/C++-Discrete-mathematics" rel="alternate" type="text/html" title="Discrete mathematics(이산수학)" /><published>2019-03-29T00:00:00+09:00</published><updated>2019-03-29T00:00:00+09:00</updated><id>http://localhost:4000/posts/C++%20Discrete%20mathematics</id><content type="html" xml:base="http://localhost:4000/posts/C++-Discrete-mathematics">&lt;p&gt;이산수학을 들으면서 까먹었던 c++ 사용법을 다시 공부하게 됐다. 1차 과제는 생각한 숫자를 n장의 카드에서 있나 없나 확인으로 맞추는 과제였는데 배열의 동적할당 정도 사용한것 같다.&lt;/p&gt;

&lt;p&gt;이번 2차 과제는&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;교재 1장의 프로그래밍 실습에 있는 가우스 제거 방법으로 역행렬을 구하는 프로그램을 참조하여 역행렬을 구하라.&lt;/li&gt;
  &lt;li&gt;단, 행렬은 n 값을 받아서 n×n에 대해서 가우스 제거 방법과 가우스-조던 방법을 이용한 해석적 방법으로 역행렬을 구하여 서로 값들을 비교하라.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;함수인자로 2차원 배열을 할당하기 위해 2중 포인터를 사용하였다.&lt;/p&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matrixout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;2차원 배열을 동적으로 할당하는 방법&lt;/p&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// allocate 2nd dimension matrix
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Gmimg</name></author><category term="C++" /><category term="C++" /><category term="이산수학" /><summary type="html">이산수학을 들으면서 까먹었던 c++ 사용법을 다시 공부하게 됐다. 1차 과제는 생각한 숫자를 n장의 카드에서 있나 없나 확인으로 맞추는 과제였는데 배열의 동적할당 정도 사용한것 같다.</summary></entry><entry><title type="html">C++ polymorphism and virtual functions</title><link href="http://localhost:4000/posts/C++-Polymorphism-and-Virtual-Functions" rel="alternate" type="text/html" title="C++ polymorphism and virtual functions" /><published>2018-12-04T00:00:00+09:00</published><updated>2018-12-04T00:00:00+09:00</updated><id>http://localhost:4000/posts/C++%20Polymorphism%20and%20Virtual%20Functions</id><content type="html" xml:base="http://localhost:4000/posts/C++-Polymorphism-and-Virtual-Functions">&lt;h1 id=&quot;virtual-function&quot;&gt;Virtual function&lt;/h1&gt;

&lt;p&gt;다형성(Polymorphism) : 하나의 기능에 많은 의미를 연계&lt;/p&gt;

&lt;p&gt;부모클래스의 함수를 overiding한것과 같다. 참고로 virtual funtion을 사용하지 않고 그냥 사용하면 redefine된다. 모든함수를 virtual function으로 사용 하지 않는 이유는 OVERHEAD! 더 많은 저장공간을 필요로한다.&lt;/p&gt;

&lt;p&gt;만약 부모클래스에서 사용하지 않는 함수를 가상함수로 상속할 때 Pure virtual function을 사용한다. 이때 부모클래스를 Abstract base class라고한다.&lt;/p&gt;

&lt;p&gt;Make all destructors virtual.&lt;/p&gt;

&lt;p&gt;Derived class objects can be assigned to base class objects. Base class members are lost; slicing problem. Pointer assignments and dynamic objects : Allow “fix” to slicing problem.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-C++&quot;&gt;virtual void draw() = 0; //Not needed to give any definition.
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//This is the header file sale.h.
//This is the interface for the class Sale.
//Sale is a class for simple sales.
&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;#ifndef SALE_H
#define SALE_H
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SavitchSale&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Sale&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thePrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;savings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//Returns the savings if you buy other instead of the calling object.
&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;private:&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;operator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//Compares two sales to see which is larger.
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//SavitchSale
&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;#endif // SALE_H
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//This is the file sale.cpp.
//This is the implementation for the class Sale.
//The interface for the class Sale is in the file sale.h.
&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &quot;sale.h&quot;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SavitchSale&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//Intentionally empty
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thePrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thePrice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thePrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Error: Cannot have a negative price!&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newPrice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Error: Cannot have a negative price!&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;operator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//SavitchSale
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//This is the file discountsale.h.
//This is the interface for the class DiscountSale.
&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;#ifndef DISCOUNTSALE_H
#define DISCOUNTSALE_H
#include &quot;sale.h&quot;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SavitchSale&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DiscountSale&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DiscountSale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DiscountSale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thePrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//Discount is expressed as a percent of the price.
//A negative discount is a price increase.
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;discount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//SavitchSale
&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;#endif //DISCOUNTSALE_H
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//This is the implementation for the class DiscountSale.
//This is the file discountsale.cpp.
//The interface for the class DiscountSale is in the header file discountsale.h.
&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;#include &quot;discountsale.h&quot;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SavitchSale&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DiscountSale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DiscountSale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;discount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//Intentionally empty
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DiscountSale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DiscountSale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thePrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thePrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;discount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;theDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//Intentionally empty
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DiscountSale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;discount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DiscountSale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;discount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DiscountSale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fraction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;discount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fraction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//SavitchSale
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//This is the file SaleMain.cpp
//Demonstrates the performance of the virtual function bill.
&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &quot;sale.h&quot; //Not really needed, but safe due to ifndef.
#include &quot;discountsale.h&quot;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ios&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SavitchSale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;simple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;10.00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//One item at $10.00.
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DiscountSale&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;discount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;11.00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//One item at $11.00 with a 10% discount.
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ios&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fixed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ios&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;showpoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;precision&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;discount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;simple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Discounted item is cheaper.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Savings is $&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;simple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;discount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Discounted item is not cheaper.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Gmimg</name></author><category term="C++" /><category term="C++" /><category term="Pointer" /><category term="Polymorphism" /><summary type="html">Virtual function</summary></entry></feed>