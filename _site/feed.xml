<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="ko_KR"><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="ko_KR" /><updated>2019-07-27T16:26:18+09:00</updated><id>http://localhost:4000/</id><title type="html">GMIMG</title><subtitle>Mechagrammer</subtitle><author><name>Jimin Hwang</name></author><entry><title type="html">C lang</title><link href="http://localhost:4000/posts/c-lang" rel="alternate" type="text/html" title="C lang" /><published>2019-07-27T00:00:00+09:00</published><updated>2019-07-27T00:00:00+09:00</updated><id>http://localhost:4000/posts/c%20lang</id><content type="html" xml:base="http://localhost:4000/posts/c-lang">&lt;h1 id=&quot;embedded-c-programming&quot;&gt;Embedded C Programming&lt;/h1&gt;

&lt;h2 id=&quot;들어가며&quot;&gt;들어가며&lt;/h2&gt;

&lt;p&gt;이 포스팅은 2019년 여름 멀티캠퍼스에서 ‘청년취업아카데미 스마트 디바이스 프로그래밍’ 과정을 수강하며 배운것을 정리하는 것을 목적으로 합니다. 임베디드 회사 윌텍(Willtek)에서 강사님을 모셔서 배웠습니다. IDE는 visual stdio 2005 입니다.&lt;/p&gt;

&lt;p&gt;1주차에서 3주차는 C언어와 자료구조, 알고리즘을 공부했습니다. 틀린 내용이 있을 수 있으므로 지적이나 피드백은 감사하게 받겠습니다.&lt;/p&gt;

&lt;h2 id=&quot;임베디드-시스템&quot;&gt;임베디드 시스템&lt;/h2&gt;

&lt;p&gt;임베디드 시스템은 다양한 분야에서 사용되는 만큼 각자 다른 목적을 가지고있다. 대부분은 몇가지 기능만을 수행하도록 설계된다. 또한 수백개의 규모로 양산되기 때문에 가격도 중요하다. 즉 메모리를 최대한 활용하고 적당한 속도의 싼 마이크로 프로세서를 사용하는게 좋다. 또한 신뢰성(안정성)을 중요시한다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%9E%84%EB%B2%A0%EB%94%94%EB%93%9C_%EC%8B%9C%EC%8A%A4%ED%85%9C&quot;&gt;임베디드 시스템&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;c언어&quot;&gt;C언어&lt;/h2&gt;

&lt;p&gt;하드웨어에 가장 가까운 코드는 &lt;strong&gt;기계어&lt;/strong&gt;로 0과 1로 이루어져있고, 이것을 인간의 관점에서 이해하기 쉽게 기계어와 1:1 매칭 구성한것이 &lt;strong&gt;어셈블리어&lt;/strong&gt;이다.  여기까지는 인간의 설계 보단 기계의 인식과정에 중점을 두어 &lt;u&gt;Low-Level 언어&lt;/u&gt;로 불린다. 기계어와 어셈블리어는 CPU 아키텍처마다 다르다. 예를들어 인텔과 AMD의 CPU에서 사용하는 어셈블리어는 다르다.&lt;/p&gt;

&lt;p&gt;같은 프로그램이어도 다른 기계어와 어셈블리어를 만들어야하는 불필요한 과정을 생략하기위해 C언어가 만들어졌다. C언어는 같은 코드에도 컴파일러가 플랫폼에 맞는 다른 어셈블리어로 전환해준다. 이로서 인간은 플랫폼과 상관없이 자신이 설계하고자하는 프로그램을 설계할 수있게 되었고, &lt;u&gt;High-Level 언어&lt;/u&gt;로 불린다. 참고로 High-Level 언어로는 JAVA와 C언어 기반으로 짜여진 Python이있다.&lt;/p&gt;

&lt;p&gt;High-Level 언어는 Low-Level의 언어에 비해 생산성은 매우 높으나, 자원활용(메모리,시간) 효율성이 떨어진다. 일반 개발자가 Low-Level 언어를 사용할 일은 거의 없으나, 임베디드 업계에서는 자원활용이 매우 중요하고, 또 컴파일러가 개발되지 않은 환경에서 어셈블리어를 다루는 개발자가 많다고 한다.&lt;/p&gt;

&lt;p&gt;참고로 같은 C언어도 버전(컴파일러)에 따라 오류와 경고가 달라질 수 있다. 안정성, 신뢰성이 매우 중요한 항공,군사 업계에서는 이러한 충돌 가능성을 줄이기 위해 &lt;a href=&quot;https://ko.wikipedia.org/wiki/MISRA_C&quot;&gt;MISRA&lt;/a&gt; 같은 개발 표준을 사용한다.&lt;/p&gt;

&lt;p&gt;(컴파일러에 대한 이야기)&lt;/p&gt;

&lt;p&gt;참고&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/C_(%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D_%EC%96%B8%EC%96%B4)&quot;&gt;C 언어&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%BB%B4%ED%93%A8%ED%84%B0_%EA%B5%AC%EC%A1%B0&quot;&gt;컴퓨터 구조&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%8B%9C%EC%8A%A4%ED%85%9C_%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98&quot;&gt;시스템 아키텍처&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/X86&quot;&gt;x86&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%ED%8C%8C%EC%9D%B4%EC%8D%AC&quot;&gt;파이썬&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%BB%B4%ED%8C%8C%EC%9D%BC%EB%9F%AC&quot;&gt;컴파일러&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/GNU_%EC%BB%B4%ED%8C%8C%EC%9D%BC%EB%9F%AC_%EB%AA%A8%EC%9D%8C&quot;&gt;GCC&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;상수&quot;&gt;상수&lt;/h2&gt;

&lt;p&gt;CPU는 0과 1이라는 2진수를 사용하기 때문에 우리가 일상생활에서 사용하는 10진수와 다르다. 수에 대해 이해 할 수록 프로그래밍 할 때 도움이된다. 또한 2진수는 보기가 불편하여 4자리씩 묶어서 16진수로 표현한다.  ( 0001(2) == 0x1)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%B9%84%ED%8A%B8&quot;&gt;bit&lt;/a&gt;는 CPU가 인식할수 있는 최소단위이다. 즉 0과 1 이므로 2진수 한자리를 bit로 정의한다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%B0%94%EC%9D%B4%ED%8A%B8&quot;&gt;byte&lt;/a&gt;(B)는 일정한 갯수의 비트로 이루어진 비트열로 주소로 표현할 수 있는 가장 작은 단위라고 생각하면 된다. 대부분은 8bit이다. 그러므로 8bit는 16진수 두자리로 표현할 수 있다. (1byte == 0x00)&lt;/p&gt;

&lt;p&gt;변환법 참고 : &lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%9D%B4%EC%A7%84%EB%B2%95&quot;&gt;2진수&lt;/a&gt; - 10진수 - &lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%8B%AD%EC%9C%A1%EC%A7%84%EB%B2%95&quot;&gt;16진수&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;c언어의-데이터-타입&quot;&gt;C언어의 데이터 타입&lt;/h3&gt;

&lt;p&gt;정수의 데이터 타입&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;데이터 타입&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;크키(B)&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;최소값&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;최대값&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;char&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;127&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;signed char&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;-128&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;127&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;unsigned char&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;255&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;signed short&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;-32,768&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;32,768&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;unsigned short&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;65,535&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;signed int&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;-2,147,483,648&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;2,147,483,648&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;unsigned int&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;4,294,967,295&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;signed long&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;-2,147,483,648&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;2,147,483,648&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;unsigned long&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;4,294,967,295&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;signed long long&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;-9,223,372,036,854,775,808&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;9,223,372,036,854,775,808&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;unsigned long long&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;‭18,446,744,073,709,551,615&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;integer(정수)는 시스템의 기본연산 단위를 사용하여 컴파일러에 따라 다르다. (16bit =&amp;gt;2byte, 32=&amp;gt;4byte, 64=&amp;gt;4byte) 대부분의 경우는 4byte이다.&lt;/p&gt;

&lt;p&gt;실수의 데이터 타입&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Type&lt;/th&gt;
      &lt;th&gt;크기&lt;/th&gt;
      &lt;th&gt;최소값&lt;/th&gt;
      &lt;th&gt;최대값&lt;/th&gt;
      &lt;th&gt;유효 자릿수&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;float&lt;/td&gt;
      &lt;td&gt;4B&lt;/td&gt;
      &lt;td&gt;1.175494351E - 38&lt;/td&gt;
      &lt;td&gt;3.402823466E + 38&lt;/td&gt;
      &lt;td&gt;10진수 6자리&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;double&lt;/td&gt;
      &lt;td&gt;8B&lt;/td&gt;
      &lt;td&gt;2.250738585072014E -308&lt;/td&gt;
      &lt;td&gt;1.7976931348623158E + 308&lt;/td&gt;
      &lt;td&gt;10진수 15자리&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;실수는 unsigned type이 없다.&lt;/p&gt;

&lt;h3 id=&quot;suffix&quot;&gt;suffix&lt;/h3&gt;

&lt;p&gt;c언어에서 사용하는 숫자(100,10.1)은 시스템의 기본 정수,실수를 따른다.&lt;/p&gt;

&lt;p&gt;시스템의 기본 정수 : 100 =&amp;gt; signed integer
시스템의 기본 실수 : 10.1 =&amp;gt; double&lt;/p&gt;

&lt;p&gt;숫자의 타입 바꾸기 위해서 suffix 사용&lt;/p&gt;

&lt;p&gt;100 -&amp;gt; signed int&lt;/p&gt;

&lt;p&gt;100U -&amp;gt; unsigned int&lt;/p&gt;

&lt;p&gt;100L -&amp;gt; long&lt;/p&gt;

&lt;p&gt;100UL -&amp;gt; unsigned long&lt;/p&gt;

&lt;p&gt;100LL -&amp;gt; long long&lt;/p&gt;

&lt;p&gt;100ULL -&amp;gt; unsinged long long&lt;/p&gt;

&lt;p&gt;float 유효자릿수 10진수 6자리
double 유효자릿수 10진수 15자리&lt;/p&gt;

&lt;p&gt;float(4B) -&amp;gt; 3.14f, -712.34E2f&lt;/p&gt;

&lt;p&gt;long double(8B) -&amp;gt; 3.14L, -712.34e2l&lt;/p&gt;

&lt;h3 id=&quot;문자열&quot;&gt;문자열&lt;/h3&gt;

&lt;p&gt;c언어에서 &lt;stdio.h&gt;라는 표준 입출력 라이브러리 문자를 입출력한다. 문자열을 저장하는 방법은 char형 배열에 아스키([ASCII](https://ko.wikipedia.org/wiki/ASCII))코드 대응하는 숫자를 저장한다. 즉 개발자는 문자를 넣지만 컴퓨터는 자동으로 숫자로 변환하여 저장한다는 뜻이다.&lt;/stdio.h&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;
void main(void)
{
	printf(&quot;Hello&quot;);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;printf&quot;&gt;printf&lt;/h4&gt;

&lt;dl&gt;
  &lt;dt&gt;printf 함수는 아스키코드로 이루어진 문자열상수를 콘솔에 문자로 변환해서 보여준다.&lt;/dt&gt;
  &lt;dt&gt;“Hello” =&amp;gt; 문자열 상수&lt;/dt&gt;
  &lt;dd&gt;char str[]= “Hello” -&amp;gt; str은 char 형 배열로 6개가 들어감 5개문자(‘H’, ‘e’, ‘l’, ‘l’, ‘o’) + ‘\0’(0x00)&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;char형 배열이 문자열로 인식되기 위해서는 ‘\0’ 문자를 포함해야한다.&lt;/p&gt;

&lt;p&gt;‘0’ 문자는 아스키코드로 0x20 값이다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;‘\0’은 아스키코드로 0x00(NUL)을 의미한다.&lt;/p&gt;

  &lt;p&gt;NULL은 헤더파일에 정의된 매크로로 null pointer constant, 즉 (void *)0 인 포인터 타입이다.&lt;/p&gt;

  &lt;p&gt;NULL - 0x00000000 or 0x00000000’00000000 (32 vs 64 bit)&lt;/p&gt;

  &lt;p&gt;char *ptr = NULL 과 char *ptr = 0 은 &lt;strong&gt;같은 의미&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;int a = NULL 과 int a = 0 의 의미는 &lt;strong&gt;다릅&lt;/strong&gt;니다.&lt;/p&gt;

  &lt;p&gt;출처: https://noirstar.tistory.com/16&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;문자열에는 다음과같은 특수문자들이 있다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Escape Sequence&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;ASCII&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;기능&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;\a&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0x07&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;경고음, Alarm&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;\b&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0x08&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;New line, 줄 바꿈&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;\t&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0x09&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;탭(TAB)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;\n&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0x0a&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;줄 바꾸기, New Line&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;\r&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0x0d&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;줄 처음으로 가기, Carriage Return&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;\\&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0x5c&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;백슬레쉬&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;\’&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0x27&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;홑따옴표&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;\’’&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0x22&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;겹따옴표&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;\o&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0x00&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;NULL, 문자열의 끝&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;형식지정자&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;printf 함수에서 변수에 저장된 상수를 출력할 수 있는데 이때 타입에 따라 다음과같은 형식지정자를 써주면 된다.&lt;/p&gt;

&lt;p&gt;integer : %d&lt;/p&gt;

&lt;p&gt;unsigned int : %u&lt;/p&gt;

&lt;p&gt;long : %ld&lt;/p&gt;

&lt;p&gt;unsigned long : %lu&lt;/p&gt;

&lt;p&gt;char : %c&lt;/p&gt;

&lt;p&gt;문자열 배열 : %s&lt;/p&gt;

&lt;p&gt;float, double : %f(부동소숫점), %e(지수표기법)&lt;/p&gt;

&lt;p&gt;long double : %lf, %le&lt;/p&gt;

&lt;h4 id=&quot;scanf와-scanf_s&quot;&gt;scanf와 scanf_s&lt;/h4&gt;

&lt;p&gt;scanf는 (“%s”, 주소값)을 인자로 받는다.&lt;/p&gt;

&lt;p&gt;최신버전의 컴파일러에서는 scanf 함수 대신 scanf_s를 사용 하도록 권유(거의 강요) 하고있다. 기존에 쓰던 scanf가 지정된 버퍼의 크기보다 많은양의 문자를 넣을 수 있기때문(&lt;strong&gt;버퍼 오버플로우&lt;/strong&gt;)에 보안상문제로 업데이트 한것이다. scanf_s 는 (“%s”, &lt;strong&gt;배열의 주소, 배열의 크기&lt;/strong&gt;) 를 인자로 받는다. 일정 버전(VS2010) 이상의 컴파일러에서 에러없이 scanf 를 사용하기위해 ‘#pragma warning (disable:4996)’ 또는 ‘#define _CRT_NO_SECURE_WARNINGS’을 코드 최상단에 선언해주면 된다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;서식문자&lt;/th&gt;
      &lt;th&gt;입력데이터&lt;/th&gt;
      &lt;th&gt;대응되는 인수형&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;d, D&lt;/td&gt;
      &lt;td&gt;10진 정수&lt;/td&gt;
      &lt;td&gt;int *, long *&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;o, O&lt;/td&gt;
      &lt;td&gt;8진 정수&lt;/td&gt;
      &lt;td&gt;int *, long *&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;i, I&lt;/td&gt;
      &lt;td&gt;정수&lt;/td&gt;
      &lt;td&gt;int *, long *&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;u, U&lt;/td&gt;
      &lt;td&gt;부호 없는 10진 정수&lt;/td&gt;
      &lt;td&gt;unsigned int *, unsigned long *&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;x, X&lt;/td&gt;
      &lt;td&gt;16진 정수&lt;/td&gt;
      &lt;td&gt;int *&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;e, E&lt;/td&gt;
      &lt;td&gt;부동 소수점&lt;/td&gt;
      &lt;td&gt;double *&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;f&lt;/td&gt;
      &lt;td&gt;부동 소수점&lt;/td&gt;
      &lt;td&gt;double *&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;g, G&lt;/td&gt;
      &lt;td&gt;부동 소수점&lt;/td&gt;
      &lt;td&gt;double *&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;s&lt;/td&gt;
      &lt;td&gt;문자열&lt;/td&gt;
      &lt;td&gt;char *&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;c&lt;/td&gt;
      &lt;td&gt;문자&lt;/td&gt;
      &lt;td&gt;char *&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;n&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;int *&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;p&lt;/td&gt;
      &lt;td&gt;포인터&lt;/td&gt;
      &lt;td&gt;far * or near *&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;fflush(stdin)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;scanf에서 지정된 입력 개수보다 더 많이 입력 받으면 입력버퍼에 남는데 이 버퍼를 지워주기위해 사용되는 함수이다.&lt;/p&gt;

&lt;h2 id=&quot;변수&quot;&gt;변수&lt;/h2&gt;

&lt;p&gt;변수의 선언방법은 다음과 같다.&lt;/p&gt;

&lt;p&gt;Type 변수이름;&lt;/p&gt;

&lt;p&gt;선언과 함께 초기화하는 방법은 다음과 같다.&lt;/p&gt;

&lt;p&gt;Type 변수이름 = xxx; //변수가 선언되어있지 않을때만 가능&lt;/p&gt;

&lt;p&gt;변수의 종류는 전역변수와 지역변수로 크게 두가지이다.&lt;/p&gt;

&lt;p&gt;컴파일러 버전에 따라 다르지만 &lt;a href=&quot;https://ko.wikipedia.org/wiki/C99&quot;&gt;c99&lt;/a&gt; 이전 표준(gcc 2.x 버전까지)에서 지역변수의 변수 선언은 항상 선두에 있어야한다.&lt;/p&gt;

&lt;p&gt;지역변수의 수명은 블록({ }, brace) 에서 사용가능하다.&lt;/p&gt;

&lt;p&gt;어떤 변수의 메모리를 호출하기 위해 &amp;amp;(ampersand)(address of)연산자를 사용한다.&lt;/p&gt;

&lt;p&gt;주소는 1B메모리 마다 붙이며 주소값은 메모리 크기에 따라 다르다. (32bit-&amp;gt; 4byte)&lt;/p&gt;

&lt;p&gt;sizeof 연산자는 변수의 type의 크기(byte)를 반환해준다.&lt;/p&gt;

&lt;p&gt;정수가 메모리에 저장되는 순서는 프로세서 제조사별로 다르다.&lt;/p&gt;

&lt;p&gt;예를들어 인텔은 Littel Endian, 모토롤라는 Big Endian 방식이다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%97%94%EB%94%94%EC%96%B8&quot;&gt;Littel Endian&lt;/a&gt;은 변수가 높은 메모리주소에서 낮은메모리주소로 쌓이는 방식이다.&lt;/p&gt;

&lt;h2 id=&quot;디버깅&quot;&gt;디버깅&lt;/h2&gt;

&lt;p&gt;디버깅은 간단하게 F5(디버깅), F9(중단점), F10(프로시저단위실행), F11(한단계씩 코드실행) 와 조사식, 메모리 덤프로 진행한다.&lt;/p&gt;

&lt;p&gt;직접해보는게 더 빨리 익힐 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;연산자&quot;&gt;연산자&lt;/h2&gt;

&lt;p&gt;% 의 피연산자는 양의 정수이어야함 (음수면 컴파일러 의존) 실수를 피연산자로 취할 수 없음.&lt;/p&gt;

&lt;h2 id=&quot;함수&quot;&gt;함수&lt;/h2&gt;

&lt;p&gt;#include 뒤에 파일은 &amp;lt;&amp;gt; 또는 ““을 사용하여 지정하게 된다.&lt;/p&gt;

&lt;p&gt;&amp;lt;&amp;gt; 는 컴파일러를 설치할 때 만들어진 표준 폴더에서 해당 파일을 찾아서 복사하고, “” 는 현재 작업중인 폴더에서 찾고 없으면 표준 폴더에서 찾는다.&lt;/p&gt;

&lt;p&gt;표준 폴더는 ‘C:\Program Files (x86)\Windows Kits\10\Include’&lt;/p&gt;

&lt;p&gt;함수의 입력을 parameter(인자), 출력을 return(반환), 작업을 operation(기능)이라고 함. 함수에 넣어주는 값을 argument(인수)라하고 이 값이 parameter로 전달 됨.&lt;/p&gt;

&lt;p&gt;함수 만드는 형식&lt;/p&gt;

&lt;p&gt;return type + 함수명 + (parameter list) + { code }&lt;/p&gt;

&lt;p&gt;함수를 쓰겠다고 형식을 알려주는 것이 선언, 함수 본체를 만드는 것은 정의.&lt;/p&gt;

&lt;h2 id=&quot;분기문&quot;&gt;분기문&lt;/h2&gt;

&lt;h3 id=&quot;if문&quot;&gt;if문&lt;/h3&gt;

&lt;p&gt;if(조건식) 실행문;&lt;/p&gt;

&lt;p&gt;! : 논리부정 연산자&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;숏서킷 원리&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;(A &amp;amp;&amp;amp; B) 에서 A가 false면 B는 생략한다, (A&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;B) 에서 A가 True면 B는 생략한다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;즉, 조건문에서는 연산을 하지 않는게 좋고, 조건의 확률을 따져서 조건식을 배치하면 효율이좋다.&lt;/p&gt;

&lt;h3 id=&quot;조건연산자&quot;&gt;조건연산자&lt;/h3&gt;

&lt;p&gt;A ? B : C&lt;/p&gt;

&lt;p&gt;if는 문장을 만들고, ? : 는 식을 만든다.&lt;/p&gt;

&lt;h3 id=&quot;switch--case문&quot;&gt;switch ~ case문&lt;/h3&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1번&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//break가 없으면 다음 case문으로 들어간다.
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2번&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;3번&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;switch의 조건식은 정수식(실수식 불가). case의 비교 값은 상수식만 가능(변수식 불가능). 보통 enum 과 함께 사용한다.&lt;/p&gt;

&lt;h2 id=&quot;반복문&quot;&gt;반복문&lt;/h2&gt;

&lt;h3 id=&quot;for문&quot;&gt;for문&lt;/h3&gt;

&lt;p&gt;for(초기화식;조건식;후처리식) 실행문;&lt;/p&gt;

&lt;p&gt;for(;;) : 무한루프.&lt;/p&gt;

&lt;p&gt;break : 루프를 빠져나옴.&lt;/p&gt;

&lt;p&gt;continue : 코드를 중단하고 후처리식으로 돌아감.&lt;/p&gt;

&lt;h3 id=&quot;while문&quot;&gt;while문&lt;/h3&gt;

&lt;p&gt;while(조건식) 실행문;&lt;/p&gt;

&lt;h2 id=&quot;유효범위와-기억클래스&quot;&gt;유효범위와 기억클래스&lt;/h2&gt;

&lt;p&gt;컴파일과정&lt;/p&gt;

&lt;h2 id=&quot;연산자-1&quot;&gt;연산자&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ko.cppreference.com/w/cpp/language/operator_precedence&quot;&gt;연산자 우선순위&lt;/a&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;우선순위&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;연산자&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;설명&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;결합방향&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;::&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Scope resolution (c++)&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;좌 → 우&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;++&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;--&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;후위 증가와 감소&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;()&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;함수호출&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;[]&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;배열 첨자&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;.&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;참조로 요소 선택&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;-&amp;gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;포인터를 통해 요소 선택&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;++&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;--&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;전위 증가와 감소&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;우 → 좌&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;+ -&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;단항 부호 연산자&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;!&lt;code class=&quot;highlighter-rouge&quot;&gt; &lt;/code&gt;~&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;논리 NOT, 비트단위 NOT&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(&lt;em&gt;type&lt;/em&gt;)&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;타입 캐스트&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;*&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;역참조&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&amp;amp;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;주소값&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;sizeof&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Size-of 연산자&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;new&lt;code class=&quot;highlighter-rouge&quot;&gt;, &lt;/code&gt;new[]&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;동적 메모리 할당 (c++)&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;delete&lt;code class=&quot;highlighter-rouge&quot;&gt;, &lt;/code&gt;delete[]&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;동적 메모리 해제 (c++)&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.*&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;-&amp;gt;*&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;멤버 접근&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;좌 → 우&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;%&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;곱셈, 나눗셈, 나머지&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;6&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;−&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;더하기, 빼기&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;7&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&amp;lt;&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;비트 왼쪽 쉬프트와 오른쪽 쉬프트&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;=&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;관계 연산자 &amp;lt; 와 ≤&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&amp;gt; &amp;gt;=&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;관계 연산자 &amp;gt; 와 ≥&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;9&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;!=&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;관계 = 와 ≠&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;10&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;비트 AND&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;11&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;^&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;비트 XOR (exclusive or)&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;12&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;비트 OR (inclusive or)&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;13&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;논리 AND&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;14&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;||&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;논리 OR&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;15&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;?:&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;조건 연산자 (삼항 연산자)&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;우 → 좌&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;직접 할당 (C++ 클래스를 위해 기본 제공)&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;+=&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;−=&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;합과 차 할당&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*=&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;/=&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;%=&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;곱, 몫, 나머지 할당&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&amp;lt;=&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&amp;gt;=&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;비트 왼쪽 쉬프트와 오른쪽 쉬프트 후 할당&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;=&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;^=&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;|=&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;비트연산 AND, XOR, OR 연산 후 할당&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;16&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;throw&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;(예외를 위한)Throw 연산자&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;17&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;,&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;콤마&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;좌 → 우&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;https://dojang.io/mod/page/view.php?id=188&lt;/p&gt;

&lt;p&gt;운영체제 공부&lt;/p&gt;

&lt;p&gt;https://covenant.tistory.com/100&lt;/p&gt;

&lt;p&gt;컴퓨터 구조&lt;/p&gt;

&lt;p&gt;https://covenant.tistory.com/103?category=773722&lt;/p&gt;</content><author><name>Gmimg</name></author><summary type="html">Embedded C Programming</summary></entry><entry><title type="html">C++ 이산수학 2주차</title><link href="http://localhost:4000/posts/C++-%EC%9D%B4%EC%82%B0%EC%88%98%ED%95%99-2%EC%A3%BC%EC%B0%A8" rel="alternate" type="text/html" title="C++ 이산수학 2주차" /><published>2019-03-29T00:00:00+09:00</published><updated>2019-03-29T00:00:00+09:00</updated><id>http://localhost:4000/posts/C++%20%EC%9D%B4%EC%82%B0%EC%88%98%ED%95%99%202%EC%A3%BC%EC%B0%A8</id><content type="html" xml:base="http://localhost:4000/posts/C++-%EC%9D%B4%EC%82%B0%EC%88%98%ED%95%99-2%EC%A3%BC%EC%B0%A8">&lt;p&gt;이산수학을 들으면서 까먹었던 c++ 사용법을 다시 공부하게 됐다. 1차 과제는 생각한 숫자를 n장의 카드에서 있나 없나 확인으로 맞추는 과제였는데 배열의 동적할당 정도 사용한것 같다.&lt;/p&gt;

&lt;p&gt;이번 2차 과제는&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;교재 1장의 프로그래밍 실습에 있는 가우스 제거 방법으로 역행렬을 구하는 프로그램을 참조하여 역행렬을 구하라.&lt;/li&gt;
  &lt;li&gt;단, 행렬은 n 값을 받아서 n×n에 대해서 가우스 제거 방법과 가우스-조던 방법을 이용한 해석적 방법으로 역행렬을 구하여 서로 값들을 비교하라.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;함수인자로 2차원 배열을 할당하기 위해 2중 포인터를 사용하였다.&lt;/p&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matrixout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;2차원 배열을 동적으로 할당하는 방법&lt;/p&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// allocate 2nd dimension matrix
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Gmimg</name></author><category term="C++" /><summary type="html">이산수학을 들으면서 까먹었던 c++ 사용법을 다시 공부하게 됐다. 1차 과제는 생각한 숫자를 n장의 카드에서 있나 없나 확인으로 맞추는 과제였는데 배열의 동적할당 정도 사용한것 같다.</summary></entry><entry><title type="html">C++ discrete mathematics week2</title><link href="http://localhost:4000/posts/C++-Discrete-mathematics-week2" rel="alternate" type="text/html" title="C++ discrete mathematics week2" /><published>2019-03-29T00:00:00+09:00</published><updated>2019-03-29T00:00:00+09:00</updated><id>http://localhost:4000/posts/C++%20Discrete%20mathematics%20week2</id><content type="html" xml:base="http://localhost:4000/posts/C++-Discrete-mathematics-week2">&lt;p&gt;이산수학을 들으면서 까먹었던 c++ 사용법을 다시 공부하게 됐다. 1차 과제는 생각한 숫자를 n장의 카드에서 있나 없나 확인으로 맞추는 과제였는데 배열의 동적할당 정도 사용한것 같다.&lt;/p&gt;

&lt;p&gt;이번 2차 과제는&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;교재 1장의 프로그래밍 실습에 있는 가우스 제거 방법으로 역행렬을 구하는 프로그램을 참조하여 역행렬을 구하라.&lt;/li&gt;
  &lt;li&gt;단, 행렬은 n 값을 받아서 n×n에 대해서 가우스 제거 방법과 가우스-조던 방법을 이용한 해석적 방법으로 역행렬을 구하여 서로 값들을 비교하라.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;함수인자로 2차원 배열을 할당하기 위해 2중 포인터를 사용하였다.&lt;/p&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matrixout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;2차원 배열을 동적으로 할당하는 방법&lt;/p&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// allocate 2nd dimension matrix
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Gmimg</name></author><category term="C++" /><summary type="html">이산수학을 들으면서 까먹었던 c++ 사용법을 다시 공부하게 됐다. 1차 과제는 생각한 숫자를 n장의 카드에서 있나 없나 확인으로 맞추는 과제였는데 배열의 동적할당 정도 사용한것 같다.</summary></entry><entry><title type="html">C++ polymorphism and virtual functions</title><link href="http://localhost:4000/posts/C++-Polymorphism-and-Virtual-Functions" rel="alternate" type="text/html" title="C++ polymorphism and virtual functions" /><published>2018-12-04T00:00:00+09:00</published><updated>2018-12-04T00:00:00+09:00</updated><id>http://localhost:4000/posts/C++%20Polymorphism%20and%20Virtual%20Functions</id><content type="html" xml:base="http://localhost:4000/posts/C++-Polymorphism-and-Virtual-Functions">&lt;h1 id=&quot;virtual-function&quot;&gt;Virtual function&lt;/h1&gt;

&lt;p&gt;다형성(Polymorphism) : 하나의 기능에 많은 의미를 연계&lt;/p&gt;

&lt;p&gt;부모클래스의 함수를 overiding한것과 같다. 참고로 virtual funtion을 사용하지 않고 그냥 사용하면 redefine된다. 모든함수를 virtual function으로 사용 하지 않는 이유는 OVERHEAD! 더 많은 저장공간을 필요로한다.&lt;/p&gt;

&lt;p&gt;만약 부모클래스에서 사용하지 않는 함수를 가상함수로 상속할 때 Pure virtual function을 사용한다. 이때 부모클래스를 Abstract base class라고한다.&lt;/p&gt;

&lt;p&gt;Make all destructors virtual.&lt;/p&gt;

&lt;p&gt;Derived class objects can be assigned to base class objects. Base class members are lost; slicing problem. Pointer assignments and dynamic objects : Allow “fix” to slicing problem.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-C++&quot;&gt;virtual void draw() = 0; //Not needed to give any definition.
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//This is the header file sale.h.
//This is the interface for the class Sale.
//Sale is a class for simple sales.
&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;#ifndef SALE_H
#define SALE_H
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SavitchSale&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Sale&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thePrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;savings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//Returns the savings if you buy other instead of the calling object.
&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;private:&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;operator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//Compares two sales to see which is larger.
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//SavitchSale
&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;#endif // SALE_H
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//This is the file sale.cpp.
//This is the implementation for the class Sale.
//The interface for the class Sale is in the file sale.h.
&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &quot;sale.h&quot;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SavitchSale&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//Intentionally empty
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thePrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thePrice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thePrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Error: Cannot have a negative price!&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newPrice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Error: Cannot have a negative price!&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;operator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//SavitchSale
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//This is the file discountsale.h.
//This is the interface for the class DiscountSale.
&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;#ifndef DISCOUNTSALE_H
#define DISCOUNTSALE_H
#include &quot;sale.h&quot;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SavitchSale&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DiscountSale&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DiscountSale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DiscountSale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thePrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//Discount is expressed as a percent of the price.
//A negative discount is a price increase.
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;discount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//SavitchSale
&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;#endif //DISCOUNTSALE_H
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//This is the implementation for the class DiscountSale.
//This is the file discountsale.cpp.
//The interface for the class DiscountSale is in the header file discountsale.h.
&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;#include &quot;discountsale.h&quot;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SavitchSale&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DiscountSale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DiscountSale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;discount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//Intentionally empty
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DiscountSale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DiscountSale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thePrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thePrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;discount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;theDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//Intentionally empty
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DiscountSale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;discount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DiscountSale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;discount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DiscountSale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fraction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;discount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fraction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//SavitchSale
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//This is the file SaleMain.cpp
//Demonstrates the performance of the virtual function bill.
&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &quot;sale.h&quot; //Not really needed, but safe due to ifndef.
#include &quot;discountsale.h&quot;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ios&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SavitchSale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Sale&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;simple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;10.00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//One item at $10.00.
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DiscountSale&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;discount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;11.00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//One item at $11.00 with a 10% discount.
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ios&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fixed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ios&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;showpoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;precision&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;discount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;simple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Discounted item is cheaper.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Savings is $&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;simple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;discount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Discounted item is not cheaper.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Gmimg</name></author><category term="C++" /><summary type="html">Virtual function</summary></entry><entry><title type="html">C++ inheritance</title><link href="http://localhost:4000/posts/C++-Inheritance" rel="alternate" type="text/html" title="C++ inheritance" /><published>2018-11-20T00:00:00+09:00</published><updated>2018-11-20T00:00:00+09:00</updated><id>http://localhost:4000/posts/C++%20Inheritance</id><content type="html" xml:base="http://localhost:4000/posts/C++-Inheritance">&lt;h1 id=&quot;inheritance&quot;&gt;Inheritance&lt;/h1&gt;
&lt;p&gt;class DERIVED_CLASS: public BASE_CLASS&lt;/p&gt;

&lt;p&gt;‘Derived class’ derived ‘member variables’, ‘member functions’ from ‘base class’&lt;/p&gt;

&lt;p&gt;NOT inherited&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Constructor&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-C++&quot;&gt;//construct
HourlyEmployee :: HourlyEmployee ()
    : Employee() , wageRate (0), hours(0) 
{
    //Deliberately empty
}
HourlyEmployee :: HourlyEmployee(string theName, string theNumber, double theWageRate)
    : Employee(theName, theNumber), wageRate (theWageRate), hours(theHours)
{
    //Deliberately empty 
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;protected&quot;&gt;Protected&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/C++/InhariteProtected.JPG&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;</content><author><name>Gmimg</name></author><category term="C++" /><category term="Inheritance" /><summary type="html">Inheritance class DERIVED_CLASS: public BASE_CLASS</summary></entry><entry><title type="html">Wireless lans</title><link href="http://localhost:4000/posts/wireless-LANs" rel="alternate" type="text/html" title="Wireless lans" /><published>2018-11-20T00:00:00+09:00</published><updated>2018-11-20T00:00:00+09:00</updated><id>http://localhost:4000/posts/wireless%20LANs</id><content type="html" xml:base="http://localhost:4000/posts/wireless-LANs">&lt;h1 id=&quot;wireless-lans&quot;&gt;Wireless LANs&lt;/h1&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;h3 id=&quot;characteristics&quot;&gt;Characteristics&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;감쇠&lt;/p&gt;

    &lt;p&gt;모든 방향으로 분산되기 때문에 강도가 빠르게 감소&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;간섭&lt;/p&gt;

    &lt;p&gt;동일한 주파수 대역을 사용하는 경우 신호 수신이 힘듦&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;다중 경로 전파&lt;/p&gt;

    &lt;p&gt;반사되는 신호때문에 동일한 발신자로부터 하나 이상의 신호를 수신 할 수 있음.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;오류&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;access-control&quot;&gt;Access Control&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;CSMA/CD&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;충돌이 감지되면&lt;/p&gt;

        &lt;p&gt;프레임이 수신되지 않았으므로 다시 보내야 함을 의미합니다.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;충돌이 감지되지 않으면&lt;/p&gt;

        &lt;p&gt;프레임이 수신되었음을 ack로 알립니다.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ol&gt;

    &lt;p&gt;다음과 같은 세가지 이유로 CSMA/CD는 Wireless LANs에 적합하지 않다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;동시에 sending과 또는 receiving&lt;/li&gt;
      &lt;li&gt;Hidden station problem&lt;/li&gt;
      &lt;li&gt;경로 손실, 신호 페이딩(fading)으로 인한 매우 약한 감쇄&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;CSMA/CA&lt;/p&gt;

    &lt;p&gt;반송파 감지 다중 접속&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ieee-80211&quot;&gt;IEEE 802.11&lt;/h2&gt;

&lt;p&gt;IEEE 802.11, which covers the physical and data-link layers. Sometimes called wireless Ethernet&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Basic sericee set (BSS)&lt;/p&gt;

    &lt;p&gt;와이파이처럼 하나의 AP에 연결 또는 직접연결&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Extended service set (ESS)&lt;/p&gt;

    &lt;p&gt;두개 이상의 BSS를 AP로 구성&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Data_communication/IEEE802.11.JPG&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;‘Network Allocation Vector’ (네트워크 할당 벡터) (NAV)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Data_communication/IEEE802.11MAC.JPG&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Source에서 DIFS시간동안 탐색하고 RTS를 Destination을 보낸다 여기에 채널 점유 시간을 포함합니다. 그러면 Destination에서 SIFS동안 기다렸다가 모든 기기에 CTS로 응답하면 Source가 아닌 기기들은 NAV로 아무 동작을 하지않는다. 그러고 Source와 Destination간의 Data 정보 교환을 한다.&lt;/p&gt;

&lt;p&gt;DIFS : 아무도 안쓰는지 확인하는 시간
Handshaking : RTS or CTS를 합친 시간&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Hidden-Station Problem&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The solution to the hidden station problem is the use of the handshake frames (RTS and CTS)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Data_communication/IEEE802.11Problem2.JPG&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;‘Point Coordination Function’ (PCF)&lt;/p&gt;

&lt;p&gt;AP가 스테이션에 대해 폴링을 수행, 차례대로 폴링되어 AP에 데이터를 전송.&lt;/p&gt;

&lt;p&gt;Addressing mechanisms&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Data_communication/IEEE802.11Addressing.JPG&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Data_communication/IEEE802.11Addressing2.JPG&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Exposed Station Problem&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Data_communication/IEEE802.11Problem.JPG&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;bluetooth&quot;&gt;Bluetooth&lt;/h2&gt;</content><author><name>Gmimg</name></author><category term="Data_communications" /><summary type="html">Wireless LANs</summary></entry><entry><title type="html">Wired LANs Ethernet &amp;amp; Other Wired Networks</title><link href="http://localhost:4000/posts/Wired-LANs" rel="alternate" type="text/html" title="Wired LANs Ethernet &amp; Other Wired Networks" /><published>2018-11-13T00:00:00+09:00</published><updated>2018-11-13T00:00:00+09:00</updated><id>http://localhost:4000/posts/Wired%20LANs</id><content type="html" xml:base="http://localhost:4000/posts/Wired-LANs">&lt;h1 id=&quot;ehternet&quot;&gt;Ehternet&lt;/h1&gt;

&lt;p&gt;IEEE Project 802&lt;/p&gt;

&lt;h2 id=&quot;ethernet-protocol&quot;&gt;Ethernet protocol&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;TCP/IP protocol&lt;/li&gt;
  &lt;li&gt;Local area network(LAN)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;IEEE standard for LANs&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Data_communication/IEEE802LAN.JPG&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;standard-ehternet&quot;&gt;Standard Ehternet&lt;/h2&gt;

&lt;p&gt;: data rate of 10 Mbps&lt;/p&gt;

&lt;h3 id=&quot;characteristics&quot;&gt;Characteristics&lt;/h3&gt;

&lt;p&gt;connectionless and Unrealiable Service&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Each frame sent is independent of the previous or next frame&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ethernet frame&lt;/p&gt;

&lt;p&gt;| Preamble | SFD | Destination address | Source address | Type | Data and padding | CRC |
|:——–:|—–|———————|—————-|——|——————|—–|&lt;/p&gt;

&lt;h3 id=&quot;addressing&quot;&gt;Addressing&lt;/h3&gt;

&lt;p&gt;The Ethernet address is 6 bytes (48bits)&lt;/p&gt;

&lt;p&gt;첫번째 Byte에는 Unicast, Multicast, BroadCast Addresses 정보가 들어있음.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Unicast : 짝수&lt;/p&gt;

    &lt;p&gt;All stations will receive the frame, the intended recipient keeps and handles the frame; the rest discard it.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Multicast : 홀수&lt;/p&gt;

    &lt;p&gt;All stations will receive the frame, the stations that are members of the group keep and handle it; the rest discard it.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Broadcast : FF&lt;/p&gt;

    &lt;p&gt;All stations (except the sender) will receive the frame and all stations (except the sender) keep and handle it.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;access-method&quot;&gt;Access Method&lt;/h3&gt;

&lt;p&gt;The standard Ethernet chose CSMA/CD with 1-persistent method.&lt;/p&gt;

&lt;p&gt;최소프레임길이 예제&lt;/p&gt;

&lt;h3 id=&quot;implementation&quot;&gt;Implementation&lt;/h3&gt;

&lt;p&gt;10BaseX&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Data rate 10 Mbps&lt;/li&gt;
  &lt;li&gt;Base means baseband (digital) signal&lt;/li&gt;
  &lt;li&gt;X
approximately defines either the maximum size of the cable in 100 meters. Or, the type of cable, T for unshielded twisted pair cable (UTP) and F for fiber-optic.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;10Base5 : Thick Ethernet
10Base2 : Thin Ethernet
10Base-T : Twisted-Pair Ethernet
10Base-F : Fiber Ethernet&lt;/p&gt;

&lt;h2 id=&quot;fast-ethernet&quot;&gt;FAST Ethernet&lt;/h2&gt;

&lt;h2 id=&quot;gigabit-ethernet&quot;&gt;GIGABIT Ethernet&lt;/h2&gt;

&lt;h2 id=&quot;10-gigabit-ethernet&quot;&gt;10-GIGABIT Ethernet&lt;/h2&gt;

&lt;h1 id=&quot;other-wired-networks&quot;&gt;Other wired Networks&lt;/h1&gt;

&lt;h2 id=&quot;telephone-network&quot;&gt;telephone network&lt;/h2&gt;

&lt;h2 id=&quot;the-cable-network&quot;&gt;The cable network&lt;/h2&gt;

&lt;h2 id=&quot;synchronous-optical-network-sonet&quot;&gt;Synchronous Optical Network (SONET)&lt;/h2&gt;

&lt;p&gt;a wide area network(WAN), SONET, that is used as a transport network to carry loads from other WANs.&lt;/p&gt;

&lt;p&gt;SONET/SDH is a synchronous network using synchronous TDM multiplexing.&lt;/p&gt;

&lt;p&gt;SONET&lt;/p&gt;

&lt;h2 id=&quot;atm&quot;&gt;ATM&lt;/h2&gt;</content><author><name>Gmimg</name></author><category term="Data_communications" /><summary type="html">Ehternet</summary></entry><entry><title type="html">Media access control(mac)</title><link href="http://localhost:4000/posts/Media-Access-Control(MAC)" rel="alternate" type="text/html" title="Media access control(mac)" /><published>2018-11-12T00:00:00+09:00</published><updated>2018-11-12T00:00:00+09:00</updated><id>http://localhost:4000/posts/Media%20Access%20Control(MAC)</id><content type="html" xml:base="http://localhost:4000/posts/Media-Access-Control(MAC)">&lt;h1 id=&quot;mac&quot;&gt;MAC&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Random access&lt;/li&gt;
  &lt;li&gt;Controlled access&lt;/li&gt;
  &lt;li&gt;Channelization&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;random-access-protocols&quot;&gt;Random access Protocols&lt;/h2&gt;

&lt;p&gt;Each station can transmit when it desires on the condition that it follows the predefined procedure. including testing the state of the medium. If more than one station tries to send, there is an access conflict. i.e., collision.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ALOHA&lt;/li&gt;
  &lt;li&gt;CSMA&lt;/li&gt;
  &lt;li&gt;CSMA/CD&lt;/li&gt;
  &lt;li&gt;CSMA/CA&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;aloha-protocol&quot;&gt;ALOHA protocol&lt;/h3&gt;

&lt;p&gt;‘Pure ALOHA’&lt;/p&gt;

&lt;p&gt;Each station sends a frame whenever it has a frame to send (multiple access), but possibility of collision. If collided need to resend the frames that have been destroyed during transmission. Pure ALOHA protocol relies on acknowledgments from the receiver. If the acknowledgment does not arrive after a time-out period. the station assumes that the frame (or the acknowledgment) has been destoryed and resends the frame.&lt;/p&gt;

&lt;p&gt;‘Binary exponential backoff’&lt;/p&gt;

&lt;p&gt;For each retransmission, a multiplier R = 0 to 2^k -1 is randomly chosen and multiplied by t(p)(maximum propagation time) or T(fr)(the average time required to send out a frame) to find T(B).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Data_communication/BinaryExponentialBackoff.JPG&quot; alt=&quot;BinaryExponentialBackoff&quot; /&gt;&lt;/p&gt;

&lt;p&gt;‘Vulnerable time’&lt;/p&gt;

&lt;p&gt;Length of time in which there is a possibility of collision.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Data_communication/VulnerableTime.JPG&quot; alt=&quot;VulnerableTime&quot; /&gt;&lt;/p&gt;

&lt;p&gt;‘Throughput’&lt;/p&gt;

&lt;p&gt;The throughput for pure ALOHA is S= G x e^(-2G)
The maximum throughput S(max)= 1/(2e) = 0.184 when G=(1/2)&lt;/p&gt;

&lt;p&gt;‘Slotted ALOHA’&lt;/p&gt;

&lt;p&gt;Invented to improve the efficiency of pure ALOHA. Divide the time into slots of T(fr) seconds and force the station to send only at the beginning of the time slot. 시작지점을 정해줌. Vulnerable time = T(fr), Throughput S = G x E^(-G), S(max) = 0.368 when G=1&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/Data_communication/VulnerableTime.JPG&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;csma&quot;&gt;CSMA&lt;/h3&gt;

&lt;p&gt;Carrier sense multiple access (CSMA)&lt;/p&gt;

&lt;p&gt;To minimize the chance of collision and, therefore, increase the performance. 눈치를 보고 보냄.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1-persistent&lt;/li&gt;
  &lt;li&gt;Nonpersistent&lt;/li&gt;
  &lt;li&gt;p-persistent&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;csmacd&quot;&gt;CSMA/CD&lt;/h3&gt;

&lt;h3 id=&quot;csmaca&quot;&gt;CSMA/CA&lt;/h3&gt;

&lt;p&gt;For wireless networks. Collisions are avoided through the use of CSMA/CA’s three strategies: Interframe space, Contention window, and Acknowledgments.&lt;/p&gt;

&lt;h2 id=&quot;controlled-access&quot;&gt;Controlled access&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Reservation&lt;/li&gt;
  &lt;li&gt;Polling&lt;/li&gt;
  &lt;li&gt;Token passing&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;channelization&quot;&gt;Channelization&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;FDMA&lt;/li&gt;
  &lt;li&gt;TDMA&lt;/li&gt;
  &lt;li&gt;CDMA&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Gmimg</name></author><category term="Data_communications" /><summary type="html">MAC</summary></entry><entry><title type="html">Jekyll</title><link href="http://localhost:4000/posts/jekyll" rel="alternate" type="text/html" title="Jekyll" /><published>2018-11-07T00:00:00+09:00</published><updated>2018-11-07T00:00:00+09:00</updated><id>http://localhost:4000/posts/jekyll</id><content type="html" xml:base="http://localhost:4000/posts/jekyll">&lt;h1 id=&quot;뭥미&quot;&gt;뭥미&lt;/h1&gt;
&lt;!--
~~~
https://www.mattcrampton.com/blog/checking_if_a_variable_is_set_in_jekyll/










https://github.com/Shopify/liquid/issues/223#issuecomment-376816247


To summarize, here's a table of the boolean value of various values (jekyll 3.7.3, liquid 4.0.0):

Operator	nil	&quot;&quot;	&quot; &quot;
var	false	true	true
var == blank	false	false	false
var == empty	false	true	false
var == &quot;&quot;	false	true	false
var == nil	true	false	false
Generated with statements like false

- Empty strings are &quot;truthy&quot;, unlike in most languages
- No operator returns true for both undefined (nil) and empty strings. Use 'or' as suggested above (var == nil or var == empty)
- blank doesn't seem to work for strings. By analogy to the rails blank? operator, I would have expected both &quot;&quot; and &quot; &quot; to be blank, but liquid seems to only define it for certain custom datatypes.
~~~
--&gt;</content><author><name>Gmimg</name></author><category term="jekyll" /><summary type="html">뭥미 &amp;lt;!– ~~~ https://www.mattcrampton.com/blog/checking_if_a_variable_is_set_in_jekyll/</summary></entry><entry><title type="html">C++ c String and string</title><link href="http://localhost:4000/posts/C++-C-string-and-String" rel="alternate" type="text/html" title="C++ c String and string" /><published>2018-11-06T00:00:00+09:00</published><updated>2018-11-06T00:00:00+09:00</updated><id>http://localhost:4000/posts/C++%20C-string%20and%20String</id><content type="html" xml:base="http://localhost:4000/posts/C++-C-string-and-String">&lt;h1 id=&quot;c-string&quot;&gt;C-String&lt;/h1&gt;

&lt;p&gt;c언어에서 쓰던 것과 같다. 1byte type인 char의 배열이라고 볼수있다. 그리고 크기는 글자수 + 1 byte 이상인데 이 1byte는 null character(‘\o’)로 구성되어있어야 C-String으로 인식하고 내장함수를 사용할 수 있다. Array with base type char, End of string marked with null, “\0”. If null overwritten, c-string no longer “acts” like c-string!&lt;/p&gt;

&lt;p&gt;char ourString[5] = “Hi”;
// char ourString[] = “Hi”; =&amp;gt; legal
// char ourString = “Hi”; =&amp;gt; illegal&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;ourString[1] =&amp;gt; “H”&lt;/li&gt;
  &lt;li&gt;ourString[2] =&amp;gt; “i”&lt;/li&gt;
  &lt;li&gt;ourString[3] =&amp;gt; “\0”&lt;/li&gt;
  &lt;li&gt;ourString[4] =&amp;gt; ?&lt;/li&gt;
  &lt;li&gt;ourString[5] =&amp;gt; ?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Require library &amp;lt;cstring&amp;gt;&lt;/p&gt;

&lt;p&gt;cannot use operator ‘==’&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;strcmp(a, b) : ==&lt;/li&gt;
  &lt;li&gt;strcat(a, b, [limit]) : +&lt;/li&gt;
  &lt;li&gt;strcpy(a, b, [limit]) : copy&lt;/li&gt;
  &lt;li&gt;strlan(a) : length&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-C++&quot;&gt;cin.getline(a, 80);
char nextSymbol;
cin.get(nextSymbol);
cout.put(&quot;a&quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;cin.putback()&lt;/li&gt;
  &lt;li&gt;peekChar = cin.peek();&lt;/li&gt;
  &lt;li&gt;cin.ignore(1000, “\n”);&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;cctype&amp;gt;
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;toupper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tolower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;'A'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// isupper();
// islower();
// isalpha(); (alphabat)
// isdigit();
// isalnum();
// isspace();
// ispunct(); (?)
// isprint();
// isgraph();
// isctrl();
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;class-string&quot;&gt;Class string&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&quot;language-C++&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;string&amp;gt;
using namespace std ;
void newLine();

int main(){
string s1, s2, s3, s4, s5, s6;
s3 = s1 + s2; //Concatenation
s3 = &quot;Hello Mom!&quot; //Assignment
getline(cin, s4);
cin &amp;gt;&amp;gt; s5;
newLine();
}
void newLine() //clear buffer
{
	char nextChar ;
	do
	{
	cin.get (nextChar );
	} while (nextChar != ' \n');
}
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;.at(i)&lt;/li&gt;
  &lt;li&gt;.substr(position, length)&lt;/li&gt;
  &lt;li&gt;.length()&lt;/li&gt;
  &lt;li&gt;.empty()&lt;/li&gt;
  &lt;li&gt;.insert(pos, str2)&lt;/li&gt;
  &lt;li&gt;.remove(pos, length)&lt;/li&gt;
  &lt;li&gt;.find(str1, [start_pos])&lt;/li&gt;
  &lt;li&gt;.find_first_of(str1, pos)&lt;/li&gt;
  &lt;li&gt;=,+=&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-C++&quot;&gt;//class string =&amp;gt; c-String
char aCString[]= &quot;my C-string&quot;;
string stringVar;
stringVar = aCstring;
strcpy(aCString, stringVar.c_str());
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-C++&quot;&gt;int i;
double d;
string s;
i = stoi(&quot;35&quot;);
d = stod(&quot;2.5&quot;);
s = to_string(d*2);
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//Demonstrates getline and cin.get.
&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;string&amp;gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;just&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secondString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secondString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Enter two strings.&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;getline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;getline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secondString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;just&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;firstString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secondString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;just&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secondString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;91&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;c1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;65&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;96&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;c1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;97&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secondString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secondString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;91&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;c2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;65&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;96&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;c2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;97&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;They are not anagrams.&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;They are anagrams!&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Gmimg</name></author><category term="C++" /><category term="String" /><summary type="html">C-String</summary></entry></feed>